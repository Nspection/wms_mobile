Процедура ПроверитьНаборкуНаСервере() Экспорт
    ФСтр = КодРодителяПереагрегированный;
 

  	СтруктураЗапроса = униОбщийМодуль.НоваяСтруктураЗапросакUWS();
	СтруктураЗапроса.Вставить("КодыНаборки",Фстр);

	СтруктураЗапроса.Вставить("ИмяМетода","ПолучитьДанныеНаборки");
	СтруктураЗапроса.Вставить("ГУИД","11");

	Попытка
		ОтветСервера =  униОбщийМодуль.ДанныеИзUWS(СтруктураЗапроса);
	Исключение
		УспехАвторизации = Ложь;
		ОтветСервера = "Ошибка";
	КонецПопытки; 
	
	Если ТипЗнч(ОтветСервера) = Тип("Структура") Тогда
		 Если ОтветСервера.Свойство("Товары") Тогда
		 
		 	 Товары.Загрузить(ОтветСервера.Товары);
		 
		 КонецЕсли; 
		 Если ОтветСервера.Свойство("Наборка") Тогда
			 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Наборка.Идентификатор КАК Идентификатор,
		|	Наборка.Количество КАК Количество
		|ПОМЕСТИТЬ Т1
		|ИЗ
		|	&Наборка КАК Наборка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НаборкаЛокально.КодЭлементаУчета КАК КодЭлементаУчета,
		|	НаборкаЛокально.Количество КАК Количество,
		|	НаборкаЛокально.КодСчитан КАК КодСчитан
		|ПОМЕСТИТЬ Т2
		|ИЗ
		|	&НаборкаЛокально КАК НаборкаЛокально
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т1.Идентификатор КАК КодЭлементаУчета,
		|	ЕСТЬNULL(Т1.Количество, 0) КАК Количество,
		|	Т2.КодСчитан КАК КодСчитан
		|ИЗ
		|	Т1 КАК Т1
		|		ЛЕВОЕ СОЕДИНЕНИЕ Т2 КАК Т2
		|		ПО (Т2.КодЭлементаУчета = Т1.Идентификатор)";
	
	        Запрос.УстановитьПараметр("Наборка",ОтветСервера.Наборка);
			Запрос.УстановитьПараметр("НаборкаЛокально",Наборка.Выгрузить());
			РезультатЗапроса = Запрос.Выполнить();
	

			 
		 	Наборка.Загрузить(РезультатЗапроса.Выгрузить());
		 
		 КонецЕсли; 

	КонецЕсли;
КонецПроцедуры


Процедура ВыгрузитьНаборкуНаСервере(СообщениеО)  Экспорт
  	СтруктураЗапроса = униОбщийМодуль.НоваяСтруктураЗапросакUWS();
	СтруктураЗапроса.Вставить("КодыНаборки",Наборка.Выгрузить());

	СтруктураЗапроса.Вставить("ИмяМетода","ВыгрузитьДанныеОбратнойАгрегации");
	СтруктураЗапроса.Вставить("ГУИД","11");

	Попытка
		ОтветСервера =  униОбщийМодуль.ДанныеИзUWS(СтруктураЗапроса);
	Исключение
		УспехАвторизации = Ложь;
		ОтветСервера = "Ошибка";
	КонецПопытки; 
	
	Если ТипЗнч(ОтветСервера) = Тип("Структура") Тогда
		 Если ОтветСервера.Свойство("ОтветРезультат") Тогда
	          СообщениеО = ОтветСервера.ОтветРезультат;
		 КонецЕсли; 
	КонецЕсли;
КонецПроцедуры
 

Процедура ВыполнитьПереагрегацию(Инфо)  Экспорт

	СтруктураЗапроса = униОбщийМодуль.НоваяСтруктураЗапросакUWS();

	СтруктураЗапроса.Вставить("ИмяМетода","ВыполнитьПереагрегацию");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТЗ.КодЭлементаУчета КАК КодЭлементаУчета,
		|	ТЗ.Количество КАК Количество,
		|	ТЗ.КодСчитан КАК КодСчитан
		|ПОМЕСТИТЬ ДанныеСканирования
		|ИЗ
		|	&ТЗ КАК ТЗ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДанныеСканирования.КодЭлементаУчета КАК КодЕдиницыАгрегации,
		|	ДанныеСканирования.Количество КАК Количество,
		|	ДанныеСканирования.КодСчитан КАК КодСчитан,
		|	&КодРодителя КАК КодРодителя
		|ИЗ
		|	ДанныеСканирования КАК ДанныеСканирования
		|ГДЕ
		|	ДанныеСканирования.КодСчитан = ИСТИНА";
	
	Запрос.УстановитьПараметр("КодРодителя", КодРодителяПереагрегированный);
	Запрос.УстановитьПараметр("ТЗ", Наборка.Выгрузить());
	РезультатЗапроса = Запрос.Выполнить();
	
	
	
	СтруктураЗапроса.Вставить("Переагрегация",РезультатЗапроса.Выгрузить());

	Попытка
		ОтветСервера =  униОбщийМодуль.ДанныеИзUWS(СтруктураЗапроса);
	Исключение
		УспехАвторизации = Ложь;
		ОтветСервера = "Ошибка";
	КонецПопытки; 
	
	Если ТипЗнч(ОтветСервера) = Тип("Структура") Тогда
		 Если ОтветСервера.Свойство("ОтветОтказа") Тогда
		 
		 	 Инфо = ОтветСервера.ОтветОтказа;	
		 иначе
			 Инфо = "Ошибка подключения к серверу";
		 КонецЕсли; 
	КонецЕсли;

КонецПроцедуры
 