&НаСервере
Процедура ЗахватитьДокументЛокально(СообщениеПользователюЮ)
	
	СтруктураЗапроса = униОбщийМодуль.НоваяСтруктураЗапросакUWS();
	СтруктураЗапроса.Вставить("ИмяМетода","ЗахватитьНаборку");
	СтруктураЗапроса.Вставить("ГУИД",СокрЛП(Объект.Ссылка.ТТНЕГАИС));
	СтруктураЗапроса.Вставить("Пользователь",ПараметрыСеанса.ТекущийПользовательУИД);
	
	Попытка
		ОтветСервера =  униОбщийМодуль.ДанныеИзUWS(СтруктураЗапроса);
	Исключение
		УспехАвторизации = Ложь;
		ОтветСервера = "Ошибка";
	КонецПопытки; 
	
	Если ТипЗнч(ОтветСервера) = Тип("Структура") Тогда
		ДокументЗахваченЛокально = ОтветСервера.ДокументЗахвачен; 
		Если НЕ ДокументЗахваченЛокально  Тогда
			
			СообщениеПользователюЮ = "Документ захвачен "+ОтветСервера.Пользователь;
			
		КонецЕсли; 
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
		ТригерПриемаСканераШтрихКода = Истина;
		униОбщийМодуль.ВернутьКодЛинииПереагрегации(Истина);
        ОбновитьОтображениеКнопок();

КонецПроцедуры

&НаСервере
Процедура ДобавитьКодКНаборке(ШтрихКодУчета)
  типКодаЭлемента =  униОбщийМодуль.ОпрределитьТипСчитанногоШК(ШтрихКодУчета);	
  типКодаРодителя =  униОбщийМодуль.ОпрределитьТипСчитанногоШК(Объект.КодРодителяПереагрегированный);	
  Если типКодаЭлемента = "Прочий" Тогда
  	  Возврат;
  КонецЕсли; 
  
  Если Найти(типКодаРодителя,"Палета") >0 или Найти(типКодаРодителя,"SSCC") >0 Тогда
       Если Найти(типКодаЭлемента,"Короб") =0 Тогда
	        Сообщить("Ожидается код короба");
	   	    Возврат;
	   КонецЕсли; 
	   ИначеЕсли Найти(типКодаРодителя,"Короб") >0  Тогда
		   Если Найти(типКодаЭлемента,"ФСМ2012") =0 И Найти(типКодаЭлемента,"ФСМ2018") =0 Тогда
		   
	        Сообщить("Ожидается Цифровой идентификатор ФСМ");
	   	    Возврат;
		   
		   КонецЕсли; 
  Иначе
	  Возврат;
  КонецЕсли; 
  Отбор = Новый Структура("КодЭлементаУчета",ШтрихКодУчета);
  СтрокиФ = Объект.Наборка.НайтиСтроки(Отбор);
	 Если СтрокиФ.Количество() = 0 Тогда
		  НовТч = Объект.Наборка.Добавить();
		  НовТч.КодЭлементаУчета =  ШтрихКодУчета;
		  НовТч.Количество = 0;
		  НовТч.КодСчитан = Истина;
	 КонецЕсли;  
 Для каждого ТекСтрФ Из СтрокиФ Цикл
 
 	 ТекСтрФ.КодСчитан = Истина;
 
 КонецЦикла; 
   
КонецПроцедуры
&НаКлиенте
Процедура ОбновитьОтображениеКнопок()
	
	Элементы.УстановитьИсходногоРодителя.Заголовок = СокрЛП(Объект.КодРодителяИсходный);
	Элементы.УстановитьНовоноРодителя.Заголовок = СокрЛП(Объект.КодРодителяПереагрегированный);
	Элементы.УстановитьИсходногоРодителя.ЦветФона = Элементы.СтраницаНаборки.ЦветФона;
	Элементы.УстановитьНовоноРодителя.ЦветФона = Элементы.СтраницаНаборки.ЦветФона;
	
	    ОбновитьОтображениеДанных();
	КонецПроцедуры
&НаСервере	
Функция НуженКонтрольНомераЛинии()

	   Возврат  Константы.униВключенКонтрольНомераЛинииПереагрегации.Получить();

КонецФункции // ()
   
&НаКлиенте
Процедура ВнестиРодителя(Код,Режим)
	
	      ТипШК = униОбщийМодуль.ОпрределитьТипСчитанногоШК(Код);
		  Если Найти(ТипШК,"ФСМ") ИЛИ ТипШК = "Прочий" Тогда
		       Сообщить("Считан не верный код "+Код);
		  	   Возврат;
		  КонецЕсли; 
	
	      Если Режим =1 Тогда
		        Объект.КодРодителяИсходный = Код;
		  ИначеЕсли Режим =2 Тогда	
				Если СтрДлина(СокрЛП(Код)) <>26 И СтрДлина(СокрЛП(Код)) <>18 И СтрДлина(СокрЛП(Код)) <>20 Тогда
		       		 Сообщить("Считан не верный код "+Код);
					 Возврат;
				КонецЕсли; 
				Если НуженКонтрольНомераЛинии() Тогда
					Если Сред(Код,14,2) <> униОбщийМодуль.ВернутьКодЛинииПереагрегации() Тогда
			       		 Сообщить("Считан не верный код "+Код);
						 Возврат;
					КонецЕсли; 
				КонецЕсли; 
		        Объект.КодРодителяПереагрегированный = Код;
				ПроверитьНаборкуНаСервере();
		  КонецЕсли; 
		  ТригерЧтенияШКИсходногоРодителя = Ложь;
		  ТригерЧтенияШКПереагрегации = ЛОЖЬ;
		  ОбновитьОтображениеКнопок();
КонецПроцедуры
 
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если  ИмяСобытия="ОбработчикШтрихКода" и Источник="ОбработчикШтрихКода" тогда
		ШтрихКодУчета =Параметр;
		Если ТригерЧтенияШКИсходногоРодителя Тогда
		    ВнестиРодителя(ШтрихКодУчета,1);
			ПроверитьНаборкуНаСервере();

		ИначеЕсли ТригерЧтенияШКПереагрегации Тогда
			ВнестиРодителя(ШтрихКодУчета,2);
		иначе 
			ДобавитьКодКНаборке(ШтрихКодУчета);
		КонецЕсли; 
	    Записать();
	КонецЕсли;
	Если ИмяСобытия="ОбработчикШтрихКода" и Источник="ОшибкаЧтения" тогда
		Сообщить("ошибка чтения штрих-кода");
	КонецЕсли;	
КонецПроцедуры


&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
КонецПроцедуры

&НаСервере
Процедура ПроверитьНаборкуНаСервере() 
	
Объект1 = РеквизитФормыВЗначение("Объект");
Объект1.ПроверитьНаборкуНаСервере();
ЗначениеВРеквизитФормы(Объект1,"Объект");
КонецПроцедуры


&НаКлиенте
Процедура ПроверитьНаборку(Команда)
	ПроверитьНаборкуНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВыгрузитьНаборкуНаСервере(Сообщениео) 
	
Объект1 = РеквизитФормыВЗначение("Объект");
Объект1.ВыгрузитьНаборкуНаСервере(Сообщениео);
ЗначениеВРеквизитФормы(Объект1,"Объект");
КонецПроцедуры

&НаКлиенте
Процедура Выгрузить(Команда)
	СообщениеО =  "";
	ВыгрузитьНаборкуНаСервере(СообщениеО);
	Если НЕ ПустаяСтрока(СообщениеО) Тогда
		  Сообщить(СообщениеО);
	КонецЕсли; 
КонецПроцедуры


&НаСервере
Процедура ДонорНаборкиПриИзмененииНаСервере()
    Объект.Наборка.Загрузить(ДонорНаборки.Наборка.Выгрузить());
КонецПроцедуры


&НаКлиенте
Процедура ДонорНаборкиПриИзменении(Элемент)
	ДонорНаборкиПриИзмененииНаСервере();
КонецПроцедуры


&НаКлиенте
Процедура УстановитьИсходногоРодителя(Команда)
	ТригерЧтенияШКИсходногоРодителя = Истина;
	ТригерЧтенияШКПереагрегации = Ложь;
	Элементы.УстановитьИсходногоРодителя.ЦветФона = Новый Цвет(160,82,45);
КонецПроцедуры


&НаКлиенте
Процедура УстановитьНовоноРодителя(Команда)
	ТригерЧтенияШКИсходногоРодителя = Ложь;
	ТригерЧтенияШКПереагрегации = Истина;
	Элементы.УстановитьНовоноРодителя.ЦветФона = Новый Цвет(160,82,45);

КонецПроцедуры


&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Объект.ПредставлениеДокумента = СокрЛП(Объект.КодРодителяИсходный) + " "+Формат(Объект.Дата,"ДФ=дд_ММ_гг")+" "+Объект.КодРодителяПереагрегированный;
КонецПроцедуры


&НаКлиенте
Процедура ВызватьОповещениеВрежимеОтладки(Команда)
	нстр ="";
	Подсказка = "Введите текст ШК";
	Оповещение = Новый ОписаниеОповещения("ПослеВводаСтроки",ЭтаФорма, Параметры);
	ПоказатьВводСтроки(Оповещение, "", Подсказка, 0, Истина); 

	
КонецПроцедуры
&НаКлиенте
Процедура ПослеВводаСтроки(Строка, Параметры) Экспорт
    Если НЕ Строка = Неопределено Тогда
        ОбработкаОповещения("ОбработчикШтрихКода",Строка,"ОбработчикШтрихКода");
    КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПереагрегироватьНаСервере(СообщениеОтказа)
	 Объект1  =  РеквизитФормыВЗначение("Объект");
	 Объект1.ВыполнитьПереагрегацию(СообщениеОтказа);
КонецПроцедуры

&НаКлиенте
Процедура Переагрегировать(Команда)
	Если ПустаяСтрока(Объект.КодРодителяПереагрегированный) Тогда
		Возврат;
	КонецЕсли; 
	СообщениеОтказа= "";
	
	ПереагрегироватьНаСервере(СообщениеОтказа);
	Сообщить(СообщениеОтказа);
КонецПроцедуры
