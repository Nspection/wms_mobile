
&НаКлиенте
Процедура Назад(Команда)
	ЭтаФорма.Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбщийМодульКлиентскойЧасти.ПереопределенияТригераПолучениеШтрихКодаПриОткрытии(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	ОбщийМодульКлиентскойЧасти.ПереопределенияТригераПолучениеШтрихКодаПриЗакрытии(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия="ОбработчикШтрихКода"  и ТригерПриемаСканераШтрихКода тогда
		Если Параметр=404 и Источник="ОшибкаЧтения" тогда
			ОбщийМодульКлиентскойЧасти.СообщитьЧерезФорму("Штрих код некорректен");
			Возврат
		КонецЕсли;	
		 ОбработчкаПолученияДанныхШтрихКода(Параметр);
	 КонецЕсли;

 КонецПроцедуры
&НаКлиенте
 Процедура ОбработчкаПолученияДанныхШтрихКода(Параметр)
	 КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
СтандартнаяОбработка=Ложь;
Строка=ТекущийЭлемент.ТекущиеДанные;
ОткрытьФорму("Документ.итНаборка.Форма.ФормаСпискаНаборокКРаспределениюМаршрута",новый Структура("МаршрутГУИД",Строка.МаршрутГУИД),ЭтаФорма);
ТригерПриемаСканераШтрихКода=Ложь;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОбновитьНаСервере()
	СтруктураДанных=новый Структура;
	СлужебныеФункцииИПроцедурыКлиентСервер.СформироватьСтруктуруДанныхОПользователе(СтруктураДанных);
	СтруктураДанных.Вставить("ТипЗадачи",Перечисления.итWMSТипыЗадачТСД.Наборка);
	ОбработчикиЗапросаСервера.ОбновитьСписокЗадачКРаспределению(СтруктураДанных);
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	ОбновитьНаСервере();
	Элементы.Список.Обновить();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОбновитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура Принять(Команда)
СтандартнаяОбработка=Ложь;
Строка=ТекущийЭлемент.ТекущиеДанные;
ОткрытьФорму("Документ.итНаборка.Форма.ФормаВыбораДействияМаршрут",новый Структура("МаршрутГУИД,Маршрут",Строка.МаршрутГУИД,Строка.Маршрут),ЭтаФорма);
ТригерПриемаСканераШтрихКода=Ложь;
КонецПроцедуры

&НаСервере
Процедура ТестПринятьНаборкуНаСервере(АдресДанных)
	СтруктураДанных=новый Структура;
	СлужебныеФункцииИПроцедурыКлиентСервер.СформироватьСтруктуруДанныхОПользователе(СтруктураДанных);
	СтруктураДанных.Вставить("КлючОперации","ПолучениеНовойНаборки");
    СтруктураДанных=ОбработчикиЗапросаСервера.ЗапроситьДанные(СтруктураДанных,"ServiceFunction");
	Если не СлужебныеФункцииИПроцедурыКлиентСервер.ТиповойОбработчикОшибок(СтруктураДанных) Тогда 
	МодульРаспределенияДанных.ОбработчикВходящихДанных(СтруктураДанных,АдресДанных);
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ТестПринятьНаборку(Команда)
	АдресДанных=ПоместитьВоВременноеХранилище(новый Структура,ЭтаФорма.УникальныйИдентификатор);
	ТестПринятьНаборкуНаСервере(АдресДанных);
	Данные=ПолучитьИзВременногоХранилища(АдресДанных);
	Если ТипЗнч(Данные)=Тип("Структура") Тогда 
		Если Данные.Свойство("МассивСозданныхОбъектовДанных") Тогда 
			Для Каждого стр из  Данные.МассивСозданныхОбъектовДанных Цикл 
				Если ТипЗнч(стр)=Тип("ДокументСсылка.итНаборка") Тогда 
					ОткрытьФорму("Документ.итНаборка.Форма.МоиЗадачиМаршрут",,ЭтаФорма);
					ТригерПриемаСканераШтрихКода=Ложь;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры
