&НаСервере
Процедура ЗахватитьДокументЛокально(СообщениеПользователюЮ)
	
	СтруктураЗапроса = униОбщийМодуль.НоваяСтруктураЗапросакUWS();
	СтруктураЗапроса.Вставить("ИмяМетода","ЗахватитьНаборку");
	СтруктураЗапроса.Вставить("ГУИД",СокрЛП(Объект.Ссылка.ТТНЕГАИС));
	СтруктураЗапроса.Вставить("Пользователь",ПараметрыСеанса.ТекущийПользовательУИД);
	
	Попытка
		ОтветСервера =  униОбщийМодуль.ДанныеИзUWS(СтруктураЗапроса);
	Исключение
		УспехАвторизации = Ложь;
		ОтветСервера = "Ошибка";
	КонецПопытки; 
	
	Если ТипЗнч(ОтветСервера) = Тип("Структура") Тогда
		ДокументЗахваченЛокально = ОтветСервера.ДокументЗахвачен; 
		Если НЕ ДокументЗахваченЛокально  Тогда
			
			СообщениеПользователюЮ = "Документ захвачен "+ОтветСервера.Пользователь;
			
		КонецЕсли; 
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		Сообщить("Нельзя создавать документ в ручную");
		Отказ = истина;
	КонецЕсли; 
	СообщениеПЮ ="";
	ЗахватитьДокументЛокально(СообщениеПЮ);
	Если Не ПустаяСтрока(СообщениеПЮ) Тогда
		
		Сообщить(СообщениеПЮ);
		
	КонецЕсли; 
	Если НЕ ДокументЗахваченЛокально Тогда   // Другие пользователи не в документе
		
		ЭтаФорма.ТолькоПросмотр = Истина;
	Иначе 
		ТригерПриемаСканераШтрихКода = Истина;
	КонецЕсли; 
	СоответствиеСтатусаИПредставления = Новый Соответствие;
	СоответствиеСтатусаИПредставления.Вставить(0,"Создан");
	СоответствиеСтатусаИПредставления.Вставить(1,"В работе");
	СоответствиеСтатусаИПредставления.Вставить(2,"отгружен");
	СоответствиеСтатусаИПредставления.Вставить(9,"Отменен");
	
	ПредставлениеСтатуса = СоответствиеСтатусаИПредставления.Получить(Объект.СтатусДокумента);
	Если Объект.СтатусДокумента <>1 И Объект.СтатусДокумента <>0 Тогда
	
		ЭтаФорма.ТолькоПросмотр = Истина;

	
	КонецЕсли; 
	Если Объект.ПризнакТ Тогда
	     Элементы.НаборкаКодКороба.Видимость = истина;
		 Элементы.НаборкаКодФСМ.Видимость = истина;
	иначе	
	     Элементы.НаборкаКодКороба.Видимость = ЛОЖЬ;
		 Элементы.НаборкаКодФСМ.Видимость = ЛОЖЬ;
	КонецЕсли; 
	Элементы.ОтправитьКодификатор.Доступность = Объект.КодификаторПолучен;

КонецПроцедуры

&НаСервере
Процедура ДобавитьКодКНаборке(ШтрихКодУчета)
  Если униОбщийМодуль.ОпрределитьТипСчитанногоШК(ШтрихКодУчета.КодПалета) = "Прочий" Тогда
  	  Возврат;
  КонецЕсли; 
  
  Если Объект.СтатусДокумента <>1 И Объект.СтатусДокумента <>0 Тогда
	
		Возврат;
  КонецЕсли; 
  Если ШтрихКодУчета.КодФСМ = "Удалить строку элемента" Тогда
       Стр =  Объект.Наборка.НайтиСтроки(Новый Структура("КодЭлементаУчета",ШтрихКодУчета.КодПалета));
  	   Если Стр.Количество() >0 Тогда
	   
	   	    Объект.Наборка.Удалить(Стр);
	   
	   КонецЕсли; 
  
  КонецЕсли; 
  НовТч = Объект.Наборка.Добавить();
  НовТч.КодЭлементаУчета =  ШтрихКодУчета.КодПалета;
  НовТч.КодКороба = ШтрихКодУчета.КодКороба;
  НовТч.КодФСМ = ШтрихКодУчета.КодФСМ;
  НовТч.КонтрольПоЭлементам = ШтрихКодУчета.УспехПроверки;
  Если НовТч.КонтрольПоЭлементам Тогда
  
  	Элементы.НаборкаКодЭлементаУчета.ЦветФона = WebЦвета.БледноЗеленый;
	Элементы.НаборкаКодКороба.ЦветФона = WebЦвета.БледноЗеленый;
	Элементы.НаборкаКодФСМ.ЦветФона = WebЦвета.БледноЗеленый;
  Иначе
	Элементы.НаборкаКодЭлементаУчета.ЦветФона = WebЦвета.Белый;
	Элементы.НаборкаКодКороба.ЦветФона = WebЦвета.Белый;
	Элементы.НаборкаКодФСМ.ЦветФона = WebЦвета.Белый;
  	
  КонецЕсли; 
  НовТч.Количество = 0;
  ВремЗ = Объект.Наборка.Выгрузить();
  ВремЗ.Свернуть("КодЭлементаУчета,КодКороба,КодФСМ","Количество");
  Объект.Наборка.Загрузить(ВремЗ);
  Объект.КодификаторПолучен = Ложь; 
КонецПроцедуры
 

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если  ИмяСобытия="ОбработчикШтрихКода" и Источник="ОбработчикШтрихКода" тогда
		Если не ТригерПриемаСканераШтрихКода Тогда
		   Возврат;
		КонецЕсли; 
		ШтрихКодУчета =Параметр;
    	Если Объект.ПризнакТ Тогда
	 	  ТригерПриемаСканераШтрихКода = Ложь;
	 	  ПараметрыФормы = Новый Структура("КодПалета",ШтрихКодУчета);
		  
		  ФормаКонтроля = ПолучитьФорму("Документ.униНаборкаАгрегация.Форма.ФормаКонтроля",ПараметрыФормы,ЭтаФорма);
		  РезФормы = ФормаКонтроля.ОткрытьМодально();
		  
		  
  	 	  ТригерПриемаСканераШтрихКода = Истина;
          Если РезФормы = Неопределено Тогда
		  	   Возврат;
		  КонецЕсли; 
		  Если Не РезФормы.УспехПроверки Тогда
		       Возврат;
		  КонецЕсли; 
	  	Иначе
		    РезФормы = Новый Структура("КодПалета,КодКороба,КодФСМ,УспехПроверки",ШтрихКодУчета,"","",Ложь);  
	  	КонецЕсли; 
	  
		
		ДобавитьКодКНаборке(РезФормы);
	    Записать();
		Элементы.ОтправитьКодификатор.Доступность = Объект.КодификаторПолучен;
	КонецЕсли;
	Если ИмяСобытия="ОбработчикШтрихКода" и Источник="ОшибкаЧтения" тогда
		Сообщить("ошибка чтения штрих-кода");
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ОтменитьЗахватДокументаЛокально(СообщениеПользователюЮ)
	СтруктураЗапроса = униОбщийМодуль.НоваяСтруктураЗапросакUWS();
	СтруктураЗапроса.Вставить("ИмяМетода","ОтменаЗахватаНаборки");
	СтруктураЗапроса.Вставить("ГУИД",СокрЛП(Объект.Ссылка.ТТНЕГАИС));
	СтруктураЗапроса.Вставить("Пользователь",ПараметрыСеанса.ТекущийПользовательУИД);
	
	Попытка
		ОтветСервера =  униОбщийМодуль.ДанныеИзUWS(СтруктураЗапроса);
	Исключение
		УспехАвторизации = Ложь;
		ОтветСервера = "Ошибка";
	КонецПопытки; 
	
	Если ТипЗнч(ОтветСервера) = Тип("Структура") Тогда
		Если ОтветСервера.ОтмененЗахват Тогда
			
			Возврат;
			
		КонецЕсли; 
	КонецЕсли;
	СообщениеПользователюЮ ="Ошибка отмены захвата документа";
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если ДокументЗахваченЛокально Тогда
		СообщениеПЮ ="";
		ОтменитьЗахватДокументаЛокально(СообщениеПЮ);
		Если Не ПустаяСтрока(СообщениеПЮ) Тогда
			
			Сообщить(СообщениеПЮ);
			
		КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры


&НаСервере
Процедура ПроверитьНаборкуНаСервере() 
	
Объект1 = РеквизитФормыВЗначение("Объект");
Объект1.ПроверитьНаборкуНаСервере();
ЗначениеВРеквизитФормы(Объект1,"Объект");
КонецПроцедуры


&НаКлиенте
Процедура ПроверитьНаборку(Команда)
	ПроверитьНаборкуНаСервере();
	Элементы.ОтправитьКодификатор.Доступность = Объект.КодификаторПолучен;

КонецПроцедуры

&НаСервере
Процедура ВыгрузитьНаборкуНаСервере(Сообщениео) 
	
Объект1 = РеквизитФормыВЗначение("Объект");
Объект1.ВыгрузитьНаборкуНаСервере(Сообщениео);
ЗначениеВРеквизитФормы(Объект1,"Объект");
КонецПроцедуры

&НаКлиенте
Процедура Выгрузить(Команда)
	СообщениеО =  "";
	ВыгрузитьНаборкуНаСервере(СообщениеО);
	Если НЕ ПустаяСтрока(СообщениеО) Тогда
		  Сообщить(СообщениеО);
	КонецЕсли; 
КонецПроцедуры


&НаСервере
Процедура ДонорНаборкиПриИзмененииНаСервере()
    Объект.Наборка.Загрузить(ДонорНаборки.Наборка.Выгрузить());
КонецПроцедуры


&НаКлиенте
Процедура ДонорНаборкиПриИзменении(Элемент)
	ДонорНаборкиПриИзмененииНаСервере();
КонецПроцедуры


&НаСервере
Процедура ОтправитьКодификаторНаСервере(ТекстОтказа)
	Объект1 = РеквизитФормыВЗначение("Объект");
	ТабДок = Объект1.ТабДокСервере();
	Если ТипЗнч(ТабДок) <> Тип("ТабличныйДокумент") Тогда
		ТекстОтказа = "Кодификатор не был получен с сервера";
	    Возврат;
	КонецЕсли; 
	ВремФ = ПолучитьИмяВременногоФайла("PDF");
	ФайлНаДиске = Новый Файл(ВремФ);
	
	//ТабДок.Записать(ВремФ,ТипФайлаТабличногоДокумента.PDF);
	//ДД = новый ДвоичныеДанные(ВремФ);
	ФайзВложения = Новый Структура("ДанныеДД,ИмяФайлаСРаширением",ТабДок,ФайлНаДиске.Имя);
	МассивВложений = Новый Массив;
	МассивВложений.Добавить(ФайзВложения);
	МассивПолучателей = Новый Массив;
	Адресат = Константы.униАдресДляОтправкиИнформации.Получить();
	Если ПустаяСтрока(Адресат) Тогда
		ТекстОтказа = "Не введен адрес электронной почты в настройках устройства";
	    Возврат;
	КонецЕсли; 
	МассивПолучателей.Добавить(Адресат);
	Успех = униОбщийМодуль.ВоссоздатьСервисноеПисьмо83_БольшойСервер(МассивПолучателей,"Информация для распечатывания","Файлы во вложении",МассивВложений,"stepin@opvz.ru");
	Если Успех  Тогда
	     ТекстОтказа = "Успешно отправлено";
	иначе	 
	     ТекстОтказа = "Ошибка отправки сообщения";
	КонецЕсли; 
КонецПроцедуры


&НаКлиенте
Процедура ОтправитьКодификатор(Команда)
	ТекстОтказа ="";
	ОтправитьКодификаторНаСервере(ТекстОтказа);
	Сообщить(ТекстОтказа);
КонецПроцедуры

