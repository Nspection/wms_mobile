
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("КлючЗаписи") тогда
		Если ТипЗнч(Параметры.КлючЗаписи)<>тип("РегистрСведенийКлючЗаписи.итЗадачиКРаспределению") тогда
		Отказ=Истина;
		Возврат;
	КонецЕсли;	
	МенеджерЗаписи=РегистрыСведений.итЗадачиКРаспределению.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(МенеджерЗаписи,Параметры.КлючЗаписи);
	МенеджерЗаписи.Прочитать();
	Задача=МенеджерЗаписи.ПредставлениеЗадачи;
	Документ=МенеджерЗаписи.ДокументОснованиеПредставление;
	ТипЗадачи=МенеджерЗаписи.ТипЗадачи;
	КлючЗаписи=Параметры.КлючЗаписи;
	ОпределитьЗначениеРеквизитаВыборДокумента();
	Если Параметры.Свойство("ВыборДокумента") Тогда 
		ВыборДокумента=Параметры.ВыборДокумента;
	КонецЕсли;	
    ВидимостьДоступностьЭлементовСервер();
	иначе
		Отказ=Истина;
	КонецЕсли;	
	КонецПроцедуры

&НаКлиенте	
Процедура  ВидимостьДоступностьЭлементовКлиент()
	ВидимостьДоступностьЭлементовСервер();
КонецПроцедуры
&НаСервере
Процедура  ВидимостьДоступностьЭлементовСервер()
	
	Если ВыборДокумента  тогда
		Элементы.ГруппаЗадача.Видимость=Ложь;
	КонецЕсли;
КонецПроцедуры
&НаСервере
Процедура ОпределитьЗначениеРеквизитаВыборДокумента()
	Если ТипЗадачи=Перечисления.итWMSТипыЗадачТСД.Приемка или ТипЗадачи=Перечисления.итWMSТипыЗадачТСД.ПриемкаКакЕсть  тогда
		ВыборДокумента=Истина;
	КонецЕсли;
	Если ТипЗадачи=Перечисления.итWMSТипыЗадачТСД.КонтрольнаяАгрегация  тогда
		ВыборДокумента=Истина;
	КонецЕсли;
	Если ТипЗадачи=Перечисления.итWMSТипыЗадачТСД.Инвентаризация   тогда
		ВыборДокумента=Истина;
	КонецЕсли;
	Если ТипЗадачи=Перечисления.итWMSТипыЗадачТСД.Отгрузка   тогда
		ВыборДокумента=Истина;
	КонецЕсли;
	//Если ТипЗадачи=Перечисления.итWMSТипыЗадачТСД.Проверка   тогда
	//	ВыборДокумента=Истина;
	//КонецЕсли;


	КонецПроцедуры
	
&НаКлиенте
Процедура Отмена(Команда)
	ЭтаФорма.Закрыть();
КонецПроцедуры
&НаСервере
Функция  ПринятьКИсполнениюЗадачуНаСервере(УникальныйИдентификатор)
//СлужебныеФункцииИПроцедурыКлиентСервер.ДобавитьВЛог(КлючЗаписи.ИдЗадачи,"#ДиспетчерЗадачВыборДействия Начало получение задачи с сервера",Документ);
СтруктураДанных=новый Структура;
СлужебныеФункцииИПроцедурыКлиентСервер.СформироватьСтруктуруДанныхОПользователе(СтруктураДанных);
СтруктураДанных.Вставить("ТипПолученияДанных","Задача");
СтруктураДанных.Вставить("КлючПолученияДанных",КлючЗаписи.ИдЗадачи);
СтруктураДанных.Вставить("ТипЗадачи",КлючЗаписи.ТипЗадачи);
Ответ=ОбработчикиЗапросаСервера.ЗапроситьДанные(СтруктураДанных,"DataRegistrationAndDonload");
АдресДанныхОповещения=ПоместитьВоВременноеХранилище(Ответ,УникальныйИдентификатор);
//СлужебныеФункцииИПроцедурыКлиентСервер.ДобавитьВЛог(КлючЗаписи.ИдЗадачи,"#ДиспетчерЗадачВыборДействия Окончание получение Задачи с сервера",Документ);
Возврат АдресДанныхОповещения;   	
КонецФункции
&НаКлиенте
Процедура ПринятьКИсполнениюЗадачу(Команда)
	АдресДанныхОповещения=ПринятьКИсполнениюЗадачуНаСервере(ЭтаФорма.ВладелецФормы.УникальныйИдентификатор);
	ОбработкаПолученныхДанныхКлиент(АдресДанныхОповещения);
	//ОповеститьОВыборе(АдресДанныхОповещения);
КонецПроцедуры
#Область БлокОбработкиПолученияДанных
&НаКлиенте
Процедура ОбработкаПолученныхДанныхКлиент(ВыбранноеЗначение)
	МассивСозданныхОбъектовДанных=Неопределено;
	ОбработкаПолученныхДанныхСервер(ВыбранноеЗначение,МассивСозданныхОбъектовДанных);
	Если  ТипЗнч(МассивСозданныхОбъектовДанных)=тип("Массив") тогда
		Если МассивСозданныхОбъектовДанных.Количество()>0 тогда
			ЭтаФорма.Закрыть();
			Если ТипЗадачиДляОткрытияФормыРазделов() Тогда 
				ОткрытьФорму("Обработка.ДиспетчерЗадач.Форма.ЗадачиНаТСДПоРазделам",новый Структура("ТипРаздела","Наборки"),ЭтаФорма.ВладелецФормы);
				Иначе 
			ДанныеСканированнойЗадачи= ПолучитьКлючиДляРаботыСДанными();
			ОткрытьФорму("Обработка.ДиспетчерЗадач.Форма.МоиЗадачиОбщийСписок",новый Структура("ДанныеСканированнойЗадачи",ДанныеСканированнойЗадачи),ЭтаФорма.ВладелецФормы);
			КонецЕсли;
			ТригерПриемаСканераШтрихКода=Ложь;
			НеВозвращатьКонтрольНадТригером=Истина;
		иначе
			Сообщить("Не каких новых данных загруженно не было");
			ЭтаФорма.Закрыть();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ТипЗадачиДляОткрытияФормыРазделов()
	Если ТипЗадачи=Перечисления.итWMSТипыЗадачТСД.Наборка Тогда 
		Возврат Истина;
	Иначе 
		Возврат Ложь;
	КонецЕсли;	
	КонецФункции
&НаСервере
Процедура ОбработкаПолученныхДанныхСервер(ВыбранноеЗначение,МассивСозданныхОбъектовДанных)
СтруктураДанных=ПолучитьИзВременногоХранилища(ВыбранноеЗначение);
Если СлужебныеФункцииИПроцедурыКлиентСервер.ТиповойОбработчикОшибок(СтруктураДанных)тогда
	Возврат
КонецЕсли;
МодульРаспределенияДанных.ОбработчикВходящихДанных(СтруктураДанных,ВыбранноеЗначение);
ОбработчикиЗапросаСервера.ОбновитьСписокЗадачКРаспределению();
ОбработанныеДанные=ПолучитьИзВременногоХранилища(ВыбранноеЗначение);
Если ТипЗнч(ОбработанныеДанные)=тип("Структура") тогда
	Если ОбработанныеДанные.Свойство("МассивСозданныхОбъектовДанных") тогда
	МассивСозданныхОбъектовДанных=ОбработанныеДанные.МассивСозданныхОбъектовДанных;
КонецЕсли;
КонецЕсли;
	КонецПроцедуры
&НаСервере
Функция ПолучитьКлючиДляРаботыСДанными()
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИтЗадачиНаТСД.ДокументОснование КАК ДокументОснование,
		|	ИтЗадачиНаТСД.ТипЗадачи КАК ТипЗадачи,
		|	ИтЗадачиНаТСД.ИдЗадачи КАК ИдЗадачи,
		|	ИтЗадачиНаТСД.ИдентификаторУпаковки КАК ИдентификаторУпаковки
		|ИЗ
		|	РегистрСведений.ИтЗадачиНаТСД КАК ИтЗадачиНаТСД
		|ГДЕ
		|	ИтЗадачиНаТСД.ИдЗадачи = &ИдЗадачи";
	
	Запрос.УстановитьПараметр("ИдЗадачи", КлючЗаписи.ИдЗадачи);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если  ВыборкаДетальныеЗаписи.Следующий() тогда
	СтруктураДанных=новый Структура;
	для Каждого  Колонка из РезультатЗапроса.Колонки цикл
		СтруктураДанных.Вставить(Колонка.Имя,ВыборкаДетальныеЗаписи[Колонка.Имя]);
	КонецЦикла;
	Возврат СтруктураДанных;
	КонецЕсли;
	Возврат Неопределено;
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
КонецФункции
#КонецОбласти
&НаСервере
Функция ПринятьКИсполнениюДокументНаСервере(УникальныйИдентификатор)
//СлужебныеФункцииИПроцедурыКлиентСервер.ДобавитьВЛог(КлючЗаписи.ИдЗадачи,"#ДиспетчерЗадачВыборДействия Начало получение документа с сервера",Документ);
СтруктураДанных=новый Структура;
СлужебныеФункцииИПроцедурыКлиентСервер.СформироватьСтруктуруДанныхОПользователе(СтруктураДанных);
СтруктураДанных.Вставить("ТипПолученияДанных","Документ");
СтруктураДанных.Вставить("КлючПолученияДанных",КлючЗаписи.ИдЗадачи);
СтруктураДанных.Вставить("ТипЗадачи",КлючЗаписи.ТипЗадачи);
Ответ=ОбработчикиЗапросаСервера.ЗапроситьДанные(СтруктураДанных,"DataRegistrationAndDonload");
АдресДанныхОповещения=ПоместитьВоВременноеХранилище(Ответ,УникальныйИдентификатор);
//СлужебныеФункцииИПроцедурыКлиентСервер.ДобавитьВЛог(КлючЗаписи.ИдЗадачи,"#ДиспетчерЗадачВыборДействия Окончание получение документа с сервера",Документ);
Возврат АдресДанныхОповещения;   
КонецФункции

&НаКлиенте
Процедура ПринятьКИсполнениюДокумент(Команда)
	АдресДанныхОповещения=ПринятьКИсполнениюДокументНаСервере(ЭтаФорма.ВладелецФормы.УникальныйИдентификатор);
	ОбработкаПолученныхДанныхКлиент(АдресДанныхОповещения);
	//ОповеститьОВыборе(АдресДанныхОповещения);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
Если не НеВозвращатьКонтрольНадТригером тогда
ОбщийМодульКлиентскойЧасти.ПереопределенияТригераПолучениеШтрихКодаПриЗакрытии(ЭтаФорма);
КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
ОбщийМодульКлиентскойЧасти.ПереопределенияТригераПолучениеШтрихКодаПриОткрытии(ЭтаФорма);
КонецПроцедуры
