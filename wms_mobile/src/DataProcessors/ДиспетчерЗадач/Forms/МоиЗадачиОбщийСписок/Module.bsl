
&НаКлиенте
Процедура СписокЗадачВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
//ОткрытьЗначение(Элемент.ТекущиеДанные.ДокументОснование);
Если  ТипЗнч(Элемент.ТекущиеДанные.ДокументОснование) = тип("ДокументСсылка.итПриемка") тогда
	ОткрытьФорму("Документ.итПриемка.Форма.ФормаДокумента",новый Структура("Ключ",Элемент.ТекущиеДанные.ДокументОснование),ЭтаФорма);
КонецЕсли;
Если ТипЗнч(Элемент.ТекущиеДанные.ДокументОснование) = тип("ДокументСсылка.итРазмещение") тогда
	ОткрытьФорму("Документ.итРазмещение.Форма.ФормаЗадачиДокумента",новый Структура("Ключ,ИдЗадачи",Элемент.ТекущиеДанные.ДокументОснование,Элемент.ТекущиеДанные.ИдЗадачи),ЭтаФорма);
КонецЕсли;
Если ТипЗнч(Элемент.ТекущиеДанные.ДокументОснование) = тип("ДокументСсылка.итПеремещение") тогда
	ОткрытьФорму("Документ.итПеремещение.Форма.ФормаЗадачиДокумента",новый Структура("Ключ,ИдЗадачи",Элемент.ТекущиеДанные.ДокументОснование,Элемент.ТекущиеДанные.ИдЗадачи),ЭтаФорма);
КонецЕсли;
Если ТипЗнч(Элемент.ТекущиеДанные.ДокументОснование) = тип("ДокументСсылка.итКонтрольнаяАгрегация") тогда
	ОткрытьФорму("Документ.итКонтрольнаяАгрегация.Форма.ФормаДокумента",новый Структура("Ключ,ИдЗадачи",Элемент.ТекущиеДанные.ДокументОснование),ЭтаФорма);
КонецЕсли;
Если ТипЗнч(Элемент.ТекущиеДанные.ДокументОснование)=Тип("ДокументСсылка.итНаборка") тогда
	ОткрытьФорму("Документ.итНаборка.Форма.ФормаДокумента",новый Структура("Ключ",Элемент.ТекущиеДанные.ДокументОснование),ЭтаФорма);
КонецЕсли;
Если ТипЗнч(Элемент.ТекущиеДанные.ДокументОснование)=Тип("ДокументСсылка.итЗадачиИнвентаризации") тогда
	ОткрытьФорму("Документ.итЗадачиИнвентаризации.Форма.ФормаДокумента",новый Структура("Ключ",Элемент.ТекущиеДанные.ДокументОснование),ЭтаФорма);
КонецЕсли;
Если ТипЗнч(Элемент.ТекущиеДанные.ДокументОснование)=Тип("ДокументСсылка.итОтгрузка") тогда
	ОткрытьФорму("Документ.итОтгрузка.Форма.ФормаДокумента",новый Структура("Ключ",Элемент.ТекущиеДанные.ДокументОснование),ЭтаФорма);
КонецЕсли;
Если ТипЗнч(Элемент.ТекущиеДанные.ДокументОснование)=Тип("ДокументСсылка.итПроверка") тогда
	ОткрытьФорму("Документ.итПроверка.Форма.ФормаДокумента",новый Структура("Ключ",Элемент.ТекущиеДанные.ДокументОснование),ЭтаФорма);
КонецЕсли;


ТригерПриемаСканераШтрихКода=Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбщийМодульКлиентскойЧасти.ПереопределенияТригераПолучениеШтрихКодаПриОткрытии(ЭтаФорма);
	ПодключитьОбработчикОжидания("АнализДанныхПослеОткрытия",0.1,Истина);
	КонецПроцедуры
&НаКлиенте
Процедура АнализДанныхПослеОткрытия()Экспорт 
	Если ТипЗнч(Параметры.ДанныеСканированнойЗадачи)=тип("Структура") тогда
		ОткрытиеОбластейРаботыСДанными(Параметры.ДанныеСканированнойЗадачи);
	КонецЕсли;
	КонецПроцедуры
&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	ОбщийМодульКлиентскойЧасти.ПереопределенияТригераПолучениеШтрихКодаПриЗакрытии(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	 Если ИмяСобытия="ОбновлениеДанныхДинамическихСписков" и Источник=ОбщийМодульКлиентскойЧасти тогда
		//СлужебныеФункцииИПроцедурыКлиентСервер.ДобавитьВЛог(,"+#МоиЗадачи ОбновлениеДанныхДинамическихСписков");
		Элементы.СписокЗадач.Обновить();
		//СлужебныеФункцииИПроцедурыКлиентСервер.ДобавитьВЛог(,"-#МоиЗадачи ОбновлениеДанныхДинамическихСписков");
	КонецЕсли;
	Если ИмяСобытия="ОбработчикШтрихКода"  и ТригерПриемаСканераШтрихКода тогда
		Если Параметр=404 и Источник="ОшибкаЧтения" тогда
			ОбщийМодульКлиентскойЧасти.СообщитьЧерезФорму("Штрих код некорректен");
			Возврат
		КонецЕсли;	
		 ОбработчкаПолученияДанныхШтрихКода(Параметр);
	 КонецЕсли;

КонецПроцедуры


&НаКлиенте
Процедура ОбработчкаПолученияДанныхШтрихКода(ШтрихКод)
	СтруктураОтвета=СлужебныеФункцииИПроцедурыКлиентСервер.ПолучитьДанныеИзИтЗадачиТСД(ШтрихКод);
	
	Если СлужебныеФункцииИПроцедурыКлиентСервер.ТиповойОбработчикОшибок(СтруктураОтвета) тогда
		Возврат
	КонецЕсли;
	РезультатПроверки=ПроверкаНайденныхЗначений(СтруктураОтвета);
	Если РезультатПроверки.Количество()=1 тогда
		ОткрытиеОбластейРаботыСДанными(СтруктураОтвета[РезультатПроверки[0].Значение]);
	КонецЕсли;
КонецПроцедуры
&НаКлиенте
Процедура ОткрытиеОбластейРаботыСДанными(ДанныеЗадачи)
	Если ТипЗнч(ДанныеЗадачи.ДокументОснование)=Тип("ДокументСсылка.итПриемка") тогда
		ОткрытьФорму("Документ.итПриемка.Форма.ФормаДокумента",новый Структура("Ключ",ДанныеЗадачи.ДокументОснование),ЭтаФорма);
		ТригерПриемаСканераШтрихКода=Ложь;
	КонецЕсли;
	Если ТипЗнч(ДанныеЗадачи.ДокументОснование)=Тип("ДокументСсылка.итРазмещение") тогда
		ОткрытьФорму("Документ.итРазмещение.Форма.ФормаЗадачиДокумента",новый Структура("Ключ,ИдЗадачи,ОткрытиеСчитыванием",ДанныеЗадачи.ДокументОснование,ДанныеЗадачи.ИдЗадачи,Истина),ЭтаФорма);
		ТригерПриемаСканераШтрихКода=Ложь;
	КонецЕсли;
	Если ТипЗнч(ДанныеЗадачи.ДокументОснование)=Тип("ДокументСсылка.итПеремещение") тогда
		ОткрытьФорму("Документ.итПеремещение.Форма.ФормаЗадачиДокумента",новый Структура("Ключ,ИдЗадачи,ОткрытиеСчитыванием",ДанныеЗадачи.ДокументОснование,ДанныеЗадачи.ИдЗадачи,Истина),ЭтаФорма);
		ТригерПриемаСканераШтрихКода=Ложь;
	КонецЕсли;
	Если ТипЗнч(ДанныеЗадачи.ДокументОснование)=Тип("ДокументСсылка.итКонтрольнаяАгрегация") тогда
		ОткрытьФорму("Документ.итКонтрольнаяАгрегация.Форма.ФормаДокумента",новый Структура("Ключ",ДанныеЗадачи.ДокументОснование),ЭтаФорма);
		ТригерПриемаСканераШтрихКода=Ложь;
	КонецЕсли;
	Если ТипЗнч(ДанныеЗадачи.ДокументОснование)=Тип("ДокументСсылка.итНаборка") тогда
		ОткрытьФорму("Документ.итНаборка.Форма.ФормаДокумента",новый Структура("Ключ",ДанныеЗадачи.ДокументОснование),ЭтаФорма);
		ТригерПриемаСканераШтрихКода=Ложь;
	КонецЕсли;
    Если ТипЗнч(ДанныеЗадачи.ДокументОснование)=Тип("ДокументСсылка.итОтгрузка") тогда
		ОткрытьФорму("Документ.итОтгрузка.Форма.ФормаДокумента",новый Структура("Ключ",ДанныеЗадачи.ДокументОснование),ЭтаФорма);
		ТригерПриемаСканераШтрихКода=Ложь;
	КонецЕсли;
	Если ТипЗнч(ДанныеЗадачи.ДокументОснование)=Тип("ДокументСсылка.итПроверка") тогда
		ОткрытьФорму("Документ.итПроверка.Форма.ФормаДокумента",новый Структура("Ключ",ДанныеЗадачи.ДокументОснование),ЭтаФорма);
		ТригерПриемаСканераШтрихКода=Ложь;
	КонецЕсли;



КонецПроцедуры
&НаСервере
Функция ПроверкаНайденныхЗначений(СтруктураОтвета)
	
	
	СписокВыбора = новый СписокЗначений;
	для Каждого ПеречисленияДанных из Перечисления.итWMSТипыЗадачТСД цикл
		ПредставлениеТипаЗадачи=СлужебныеФункцииИПроцедурыКлиентСервер.ПредставлениеТипаЗадачиТСД(ПеречисленияДанных);
		Если СтруктураОтвета.Свойство(ПредставлениеТипаЗадачи) тогда
			СписокВыбора.Добавить(ПредставлениеТипаЗадачи);
		КонецЕсли;	
	КонецЦикла;
	Возврат СписокВыбора;
КонецФункции
&НаСервере
Функция ПолучитьТипЗадачи(ТипЗадачи)
	Возврат Перечисления.итWMSТипыЗадачТСД[ТипЗадачи];
	КонецФункции