#Область ОбработчикиСобытий
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия="ОбработчикШтрихКода"  и ТригерПриемаСканераШтрихКода тогда
		Если Параметр=404 и Источник="ОшибкаЧтения" тогда
			ОбщийМодульКлиентскойЧасти.СообщитьЧерезФорму("Штрих код некорректен");
			Возврат
		КонецЕсли;	
		ОбработатьДанныеШтрихКодаКлиент(Параметр)
	КонецЕсли;
	
КонецПроцедуры
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ВидимостьДоступностьСервер();
КонецПроцедуры
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбщийМодульКлиентскойЧасти.ПереопределенияТригераПолучениеШтрихКодаПриОткрытии(ЭтаФорма);
КонецПроцедуры
&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	ОбщийМодульКлиентскойЧасти.ПереопределенияТригераПолучениеШтрихКодаПриЗакрытии(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПаллетаПриИзменении(Элемент)
	Ячейка=Ложь;
	Другое=Ложь;
	Марка=Ложь;
	Короб=Ложь;
	Бутылка=Ложь;
	ДанныеРевизора.Очистить();
	РевезрвПаллеты.Очистить();
	ИдентификаторУпаковки="";
	ВидимостьДоступностьКлиент();
КонецПроцедуры

&НаКлиенте
Процедура БутылкаПриИзменении(Элемент)
	Ячейка=Ложь;
	Другое=Ложь;
	Марка=Ложь;
	Короб=Ложь;
	Паллета=Ложь;
	ДанныеРевизора.Очистить();
	ВидимостьДоступностьКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура ЯчейкаПриИзменении(Элемент)
	Бутылка=Ложь;
	Другое=Ложь;
	Марка=Ложь;
	Короб=Ложь;
	Паллета=Ложь;
	ДанныеРевизора.Очистить();
	ЯчейкаПредставление="";
	ВидимостьДоступностьКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура КоробПриИзменении(Элемент)
	Бутылка=Ложь;
	Другое=Ложь;
	Марка=Ложь;
	Ячейка=Ложь;
	Паллета=Ложь;
	ДанныеРевизора.Очистить();
	ВидимостьДоступностьКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура МаркаПриИзменении(Элемент)
	Ячейка=Ложь;
	Другое=Ложь;
	Паллета=Ложь;
	Короб=Ложь;
	Бутылка=Ложь;
	ДанныеРевизора.Очистить();
	ОтметкаВыбытия=Истина;
	Элементы.НадписьОДанныхМарки.Заголовок="";
	Элементы.ОтметкаВыбытия.Видимость=Ложь;
	ВидимостьДоступностьКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура ДругоеПриИзменении(Элемент)
	Ячейка=Ложь;
	Паллета=Ложь;
	Марка=Ложь;
	Короб=Ложь;
	Бутылка=Ложь;
	ДанныеРевизора.Очистить();
	ВидимостьДоступностьКлиент();
	
КонецПроцедуры

#Область ОСЯчейка
&НаКлиенте
Процедура ДанныеРевизораЯчейкаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ОткрытьФорму("Обработка.ОбработкаРевизор.Форма.ФормаПросмотраСтрокиНМ",новый Структура("НоменклатураПредставление,"
	+"ДатаРозлива,Количество,ИдентификаторУпаковки,КачествоПредставление,СерияНоменклатурыПредставление",ТекущийЭлемент.ТекущиеДанные.НоменклатураПредставление,
	ТекущийЭлемент.ТекущиеДанные.ДатаРозлива,ТекущийЭлемент.ТекущиеДанные.Количество,
	ТекущийЭлемент.ТекущиеДанные.ИдентификаторУпаковки,ТекущийЭлемент.ТекущиеДанные.КачествоПредставление,ТекущийЭлемент.ТекущиеДанные.СерияНоменклатурыПредставление),ЭтаФорма);
	ТригерПриемаСканераШтрихКода=Ложь;
	
КонецПроцедуры

#КонецОбласти
#Область ОСПаллета
&НаКлиенте
Процедура ДанныеРевизораПаллетаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ОткрытьФорму("Обработка.ОбработкаРевизор.Форма.ФормаПросмотраСтрокиНМ",новый Структура("НоменклатураПредставление,"
	+"ДатаРозлива,Количество,ИдентификаторУпаковки,КачествоПредставление,СерияНоменклатурыПредставление,ЯчейкаПредставление",ТекущийЭлемент.ТекущиеДанные.НоменклатураПредставление,
	ТекущийЭлемент.ТекущиеДанные.ДатаРозлива,ТекущийЭлемент.ТекущиеДанные.Количество,
	ТекущийЭлемент.ТекущиеДанные.ИдентификаторУпаковки,ТекущийЭлемент.ТекущиеДанные.КачествоПредставление,ТекущийЭлемент.ТекущиеДанные.СерияНоменклатурыПредставление,
	ТекущийЭлемент.ТекущиеДанные.ЯчейкаПредставление),ЭтаФорма);
	ТригерПриемаСканераШтрихКода=Ложь;
	
КонецПроцедуры
&НаКлиенте
Процедура РевезрвПаллетыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ОткрытьФорму("Обработка.ОбработкаРевизор.Форма.ФормаПросмотраСтрокиНМ",новый Структура("НоменклатураПредставление,"
	+"ДатаРозлива,Количество,ИдентификаторУпаковки,КачествоПредставление,СерияНоменклатурыПредставление,ЯчейкаПредставление",ТекущийЭлемент.ТекущиеДанные.НоменклатураПредставление,
	ТекущийЭлемент.ТекущиеДанные.ДатаРозлива,ТекущийЭлемент.ТекущиеДанные.Количество,
	ТекущийЭлемент.ТекущиеДанные.ИдентификаторУпаковки,ТекущийЭлемент.ТекущиеДанные.КачествоПредставление,ТекущийЭлемент.ТекущиеДанные.СерияНоменклатурыПредставление,
	ТекущийЭлемент.ТекущиеДанные.ЯчейкаПредставление),ЭтаФорма);
	ТригерПриемаСканераШтрихКода=Ложь;
КонецПроцедуры

#КонецОбласти
#Область ОСМарка

&НаКлиенте
Процедура ДанныеРевизораМаркаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ОткрытьФорму("Обработка.ОбработкаРевизор.Форма.ФормаПросмотраСтрокиНМ",новый Структура("НоменклатураПредставление,"
	+"ИдентификаторУпаковки,КачествоПредставление,СерияНоменклатурыПредставление,ЯчейкаПредставление",ТекущийЭлемент.ТекущиеДанные.НоменклатураПредставление,
	ТекущийЭлемент.ТекущиеДанные.ИдентификаторУпаковки,ТекущийЭлемент.ТекущиеДанные.КачествоПредставление,ТекущийЭлемент.ТекущиеДанные.СерияНоменклатурыПредставление,
	ТекущийЭлемент.ТекущиеДанные.ЯчейкаПредставление),ЭтаФорма);
	ТригерПриемаСканераШтрихКода=Ложь;
	
КонецПроцедуры
#КонецОбласти

#КонецОбласти
#Область ОбработчикиКоманд
&НаКлиенте
Процедура Назад(Команда)
	ЭтаФорма.Закрыть();
КонецПроцедуры
&НаКлиенте
Процедура ПеремещениеПаллеты(Команда)
	Элементы.ГруппаСтраницыПаллеты.ТекущаяСтраница=Элементы.СтраницаПаллеты2;
КонецПроцедуры
&НаКлиенте
Процедура ТекущиеДанные(Команда)
	Элементы.ГруппаСтраницыПаллеты.ТекущаяСтраница=Элементы.СтраницаПаллеты1;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбработатьДанныеШтрихКодаКлиент(Параметр)
	ДанныеРевизора.Очистить();
	РевезрвПаллеты.Очистить();
	Если Ячейка тогда
		ОбработчикСканированияЯчейки(Параметр);
		Элементы.Страницы.ТекущаяСтраница=Элементы.Страница2;
	КонецЕсли;
	Если Бутылка тогда
		ОбработчикСканированияБутылки(Параметр);
		Элементы.Страницы.ТекущаяСтраница=Элементы.Страница2;
	КонецЕсли;
	Если Паллета тогда
		ОбработчикСканированияПаллеты(Параметр);
		Элементы.Страницы.ТекущаяСтраница=Элементы.Страница2;
	КонецЕсли;
	Если Марка Тогда 
		ОбработчикСканированияМарки(Параметр);
		Элементы.Страницы.ТекущаяСтраница=Элементы.Страница2;
	КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
Процедура ВидимостьДоступностьКлиент()
	ВидимостьДоступностьСервер();
КонецПроцедуры
&НаСервере
Процедура ВидимостьДоступностьСервер()
	Элементы.ГруппаДанныеСканированияЯчейки.Видимость=Ячейка;
	Элементы.ГруппаНоменклатура.Видимость=Бутылка;
	Элементы.ГруппаДанныеСканированияПаллеты.Видимость=Паллета;
	Элементы.ГруппаДанныхМарки.Видимость=Марка;
КонецПроцедуры

#Область СПФЯчейка
&НаКлиенте
Процедура ОбработчикСканированияЯчейки(Параметр)
	ЭтапСканированияЯчейки=ЭтапСканированияЯчейки+1;
	Если НайтиЯчейкуНаСервере(Параметр,,Ложь) тогда
		ЭтапСканированияЯчейки=0;
		НакопительСканированияЯчейки="";
	ИначеЕсли ШтрихКодНакопленВерно(Параметр)  тогда
		ЭтапСканированияЯчейки=0;
		НакопительСканированияЯчейки="";
	ИначеЕсли  Ячейка и ЭтапСканированияЯчейки<2 тогда
		НакопительСканированияЯчейки=СокрЛП(Параметр);
	иначе	
		ОбщийМодульКлиентскойЧасти.СообщитьЧерезФорму("Отсканированный штрих-код "+Параметр+СокрЛП(НакопительСканированияЯчейки)+" не удовлетворяет требованиям");
		ЭтапСканированияЯчейки=0;
		НакопительСканированияЯчейки="";
	КонецЕсли;   	
КонецПроцедуры
&НаКлиенте
Функция ШтрихКодНакопленВерно(Параметр)
	МассивШтрихКодаЯчейки=новый Массив;
	МассивШтрихКодаЯчейки.Добавить(Врег(СокрЛП(НакопительСканированияЯчейки)+СокрЛП(Параметр)));
	МассивШтрихКодаЯчейки.Добавить(Врег(СокрЛП(НакопительСканированияЯчейки)+"-"+СокрЛП(Параметр)));
	МассивШтрихКодаЯчейки.Добавить(Врег(СокрЛП(Параметр)+"-"+СокрЛП(НакопительСканированияЯчейки)));
	МассивШтрихКодаЯчейки.Добавить(Врег(СокрЛП(Параметр)+СокрЛП(НакопительСканированияЯчейки)));
	Если ЭтапСканированияЯчейки=2 тогда
		СообщатьОбошибке=Истина;
	иначе
		СообщатьОбошибке=Ложь;
	КонецЕсли;
	Возврат НайтиЯчейкуНаСервере(,МассивШтрихКодаЯчейки,СообщатьОбошибке); 
КонецФункции
&НаСервере
Функция НайтиЯчейкуНаСервере(ШтрихКодЯчейки="",МассивШтрихКодаЯчейки=Неопределено,СообщатьОбОшибке=Истина)
	Если ШтрихКодЯчейки="" и МассивШтрихКодаЯчейки = Неопределено тогда
		Возврат Ложь;
	КонецЕсли;
	Если МассивШтрихКодаЯчейки=Неопределено тогда
		МассивШтрихКодаЯчейки=новый Массив;
		МассивШтрихКодаЯчейки.Добавить(ВРег(СокрЛП(ШтрихКодЯчейки)));
	КонецЕсли;
	СтруктураДанных=ОбработчикиЗапросаСервера.ЗапроситьДанные(новый Структура("КлючОперации,ТипРевизии,КлючПолученияДанных","Ревизор","Ячейка",МассивШтрихКодаЯчейки),"ServiceFunction");
	Если  СообщатьОбОшибке тогда
		Если СлужебныеФункцииИПроцедурыКлиентСервер.ТиповойОбработчикОшибок(СтруктураДанных,"МассивДанных") тогда
			Возврат Ложь;
		КонецЕсли;
		Если СлужебныеФункцииИПроцедурыКлиентСервер.ТиповойОбработчикОшибок(СтруктураДанных,"Ячейка") тогда
			Возврат Ложь;
		КонецЕсли;
	иначе
		Если СтруктураДанных.Свойство("Статус") тогда
			Если СтруктураДанных.Статус=404 тогда
				Возврат Ложь;
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;
	
	ЯчейкаПредставление=СтруктураДанных.ЯчейкаПредставление;
	//СоставЯчейки.Очистить();
	для Каждого стр из СтруктураДанных.МассивДанных цикл
		НоваяСтрока=ДанныеРевизора.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,стр);
	КонецЦикла;
	Возврат Истина;
КонецФункции




#КонецОбласти
#Область СПФБутылка
Процедура ОбработчикСканированияБутылки(Параметр)
	СтруктураЗапросаДанных=новый Структура;
	СтруктураЗапросаДанных.Вставить("КлючОперации","Ревизор");
	СтруктураЗапросаДанных.Вставить("ТипРевизии","Номенклатура");
	СтруктураЗапросаДанных.Вставить("КлючПолученияДанных",Параметр);
	СтруктураЗапросаДанных=ОбработчикиЗапросаСервера.ЗапроситьДанные(СтруктураЗапросаДанных,"ServiceFunction");
	Если СлужебныеФункцииИПроцедурыКлиентСервер.ТиповойОбработчикОшибок(СтруктураЗапросаДанных,"Номенклатура") тогда
		Возврат
	КонецЕсли;
	Если СлужебныеФункцииИПроцедурыКлиентСервер.ТиповойОбработчикОшибок(СтруктураЗапросаДанных,"НоменклатураПредставление") тогда
		Возврат
	КонецЕсли;
	Если СлужебныеФункцииИПроцедурыКлиентСервер.ТиповойОбработчикОшибок(СтруктураЗапросаДанных,"Количество") тогда
		Возврат
	КонецЕсли;
	Если СтруктураЗапросаДанных.Количество>1 тогда
		Сообщить("Сканирован штрихкод короба номенклатуры");
		Возврат
	КонецЕсли;
	НоменклатураПредставление=СтруктураЗапросаДанных.НоменклатураПредставление;
	
	
КонецПроцедуры
#КонецОбласти
#Область СПФПаллета
&НаСервере
Процедура ОбработчикСканированияПаллеты(Параметр)
	СтруктураДанных=ОбработчикиЗапросаСервера.ЗапроситьДанные(новый Структура("КлючОперации,ТипРевизии,КлючПолученияДанных","Ревизор","Паллета",Параметр),"ServiceFunction");
	Если СлужебныеФункцииИПроцедурыКлиентСервер.ТиповойОбработчикОшибок(СтруктураДанных,"МассивДанных") тогда
		Возврат 
	КонецЕсли;
	Если СлужебныеФункцииИПроцедурыКлиентСервер.ТиповойОбработчикОшибок(СтруктураДанных,"ИдентификаторУпаковки") тогда
		Возврат
	КонецЕсли;
	ИдентификаторУпаковки= СтруктураДанных.ИдентификаторУпаковки;
	для Каждого стр из СтруктураДанных.МассивДанных цикл
		НоваяСтрока=ДанныеРевизора.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,стр);
	КонецЦикла;
	Если СтруктураДанных.Свойство("МассивДанныхРезерв") тогда
		для Каждого стр из СтруктураДанных.МассивДанныхРезерв цикл
			НоваяСтрока=РевезрвПаллеты.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,стр);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры
#КонецОбласти

#Область СПФМарка
&НаСервере
Процедура ОбработчикСканированияМарки(Параметр)
	СтруктураЗапросаДанных=новый Структура;
	СтруктураЗапросаДанных.Вставить("КлючОперации","Ревизор");
	СтруктураЗапросаДанных.Вставить("ТипРевизии","Марка");
	СтруктураЗапросаДанных.Вставить("КлючПолученияДанных",Параметр);
	СтруктураЗапросаДанных=ОбработчикиЗапросаСервера.ЗапроситьДанные(СтруктураЗапросаДанных,"ServiceFunction");
	Если СлужебныеФункцииИПроцедурыКлиентСервер.ТиповойОбработчикОшибок(СтруктураЗапросаДанных,"СтуктураДанныхМарки") тогда
		Возврат
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ДанныеРевизора.Добавить(),СтруктураЗапросаДанных.СтуктураДанныхМарки);	
	Если СтруктураЗапросаДанных.СтуктураДанныхМарки.Свойство("ОтметкаВыбытия") Тогда 
		Элементы.ОтметкаВыбытия.Видимость=СтруктураЗапросаДанных.СтуктураДанныхМарки.ОтметкаВыбытия;
	КонецЕсли;
	Если СтруктураЗапросаДанных.СтуктураДанныхМарки.Свойство("НетДанныхПоSSCСвОстатках") Тогда
		Если  СтруктураЗапросаДанных.СтуктураДанныхМарки.НетДанныхПоSSCСвОстатках Тогда 
			Элементы.НадписьОДанныхМарки.Заголовок=Элементы.НадписьОДанныхМарки.Заголовок+"данных по sscc в остатках нет, информация 
			|о ячейки взята с размещения";
		КонецЕсли;
	КонецЕсли;
	Если СтруктураЗапросаДанных.СтуктураДанныхМарки.Свойство("ИдентификаторУпаковки") Тогда
		
		Если СтруктураЗапросаДанных.СтуктураДанныхМарки.ИдентификаторУпаковки="" Тогда 
			Элементы.НадписьОДанныхМарки.Заголовок=Элементы.НадписьОДанныхМарки.Заголовок+"нет данных по паллете,данные могут быть не корректны";
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти
#КонецОбласти



