
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗадачиТСД.Параметры.УстановитьЗначениеПараметра("ДокументОснование",Объект.Ссылка);
	Элементы.ДатаНомерЗаказа.Заголовок=Объект.ЗаказНаборки;
	АнализЗадач();
КонецПроцедуры


&НаСервере
Процедура АнализЗадач()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ИтЗадачиНаТСД.ИдЗадачи) КАК ИдЗадачи
		|ИЗ
		|	РегистрСведений.ИтЗадачиНаТСД КАК ИтЗадачиНаТСД
		|ГДЕ
		|	ИтЗадачиНаТСД.ДокументОснование = &ДокументОснование";
	
	Запрос.УстановитьПараметр("ДокументОснование", Объект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если  ВыборкаДетальныеЗаписи.Следующий() Тогда
		Если  ВыборкаДетальныеЗаписи.ИдЗадачи = 0 Тогда 
			Элементы.ЗадачОсталось.Заголовок="0";   
		иначе
			Элементы.ЗадачОсталось.Заголовок="Осталось выполнить задач: "+ВыборкаДетальныеЗаписи.ИдЗадачи;
		КонецЕсли;
	иначе
		Элементы.ЗадачОсталось.Заголовок="0";   
	КонецЕсли;
	
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбщийМодульКлиентскойЧасти.ПереопределенияТригераПолучениеШтрихКодаПриОткрытии(ЭтаФорма);
	АнализЗакрытияФормы();
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	ОбщийМодульКлиентскойЧасти.ПереопределенияТригераПолучениеШтрихКодаПриЗакрытии(ЭтаФорма);
КонецПроцедуры


&НаКлиенте
Процедура АнализЗакрытияФормы()
	Если Элементы.ЗадачОсталось.Заголовок="0" Тогда 
		ЭтаФорма.Закрыть();
	КонецЕсли;	
	КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия="ОбработчикШтрихКода"  и ТригерПриемаСканераШтрихКода тогда
		Если Параметр=404 и Источник="ОшибкаЧтения" тогда
			ОбщийМодульКлиентскойЧасти.СообщитьЧерезФорму("Штрих код некорректен");
			Возврат
		КонецЕсли;	
		 ОбработчкаПолученияДанныхШтрихКода(Параметр);
	 КонецЕсли;
	 Если ИмяСобытия="ОбновлениеДанныхДинамическихСписков" и Источник=ОбщийМодульКлиентскойЧасти тогда
		Элементы.ЗадачиТСД.Обновить();
		АнализЗадач();
		АнализЗакрытияФормы();
	 КонецЕсли;
 КонецПроцедуры
 
&НаКлиенте 
Процедура ОбработчкаПолученияДанныхШтрихКода(Параметр)
Задача=НайтиЗадачуНаСервере(Параметр);
Если Задача<> Неопределено Тогда
	ОткрытьФорму("Документ.итНаборка.Форма.ФормаЗадачиДокумента",новый Структура("Ключ,ИдЗадачи,ОткрытиеСчитыванием",Объект.Ссылка,Задача,Истина),ЭтаФорма);
КонецЕсли;
ТригерПриемаСканераШтрихКода=Ложь;
КонецПроцедуры

&НаСервере
Функция НайтиЗадачуНаСервере(Параметр)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИтЗадачиНаТСД.ИдЗадачи КАК ИдЗадачи
		|ИЗ
		|	РегистрСведений.ИтЗадачиНаТСД КАК ИтЗадачиНаТСД
		|ГДЕ
		|	ИтЗадачиНаТСД.ИдентификаторУпаковки = &ИдентификаторУпаковки";
	
	Запрос.УстановитьПараметр("ИдентификаторУпаковки", Параметр);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Возврат ВыборкаДетальныеЗаписи.ИдЗадачи;
	КонецЦикла;
	
	Возврат Неопределено;	
	КонецФункции

&НаКлиенте
Процедура ЗадачиТСДВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ОткрытьФорму("Документ.итНаборка.Форма.ФормаЗадачиДокумента",новый Структура("Ключ,ИдЗадачи,ОткрытиеСчитыванием",Объект.Ссылка,Элементы.ЗадачиТСД.ТекущиеДанные.ИдЗадачи),ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	ЭтаФорма.Закрыть();
КонецПроцедуры

&НаСервере
Процедура ОтказатьсяОтЗадачДокументаНаСервере()
	МассивДанных=ПолучитьДанныеДляИнициализации();
	Для Каждого стр из МассивДанных цикл
	 ОбработчикДанныхОбщиеФункцииИПроцедуры.ИнициализацияЗадачиНаСервере(стр,"ЗадачаОтказ",Перечисления.итWMSСостоянияЗадачТСД.КВыполнению)
	КонецЦикла;
КонецПроцедуры
&НаСервере
Функция ПолучитьДанныеДляИнициализации()
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИтЗадачиНаТСД.ИдЗадачи КАК ИдЗадачи,
	|	ИтЗадачиНаТСД.ТипЗадачи КАК ТипЗадачи,
	|	ИтЗадачиНаТСД.Состояние КАК Состояние
	|ИЗ
	|	РегистрСведений.ИтЗадачиНаТСД КАК ИтЗадачиНаТСД
	|ГДЕ
	|	ИтЗадачиНаТСД.ДокументОснование = &ДокументОснование";
	
	Запрос.УстановитьПараметр("ДокументОснование",Объект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	МассивДанных=новый Массив;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СтруктураДанных=новый Структура;
		для Каждого Колонка из РезультатЗапроса.Колонки цикл
			СтруктураДанных.Вставить(Колонка.Имя,ВыборкаДетальныеЗаписи[Колонка.Имя]);
		КонецЦикла;
		МассивДанных.Добавить(СтруктураДанных);
	КонецЦикла;
	Возврат МассивДанных;
КонецФункции
&НаКлиенте
Процедура ОтказатьсяОтЗадачДокументаОповещение(Результат,Параметры) Экспорт 
	Если Результат=КодВозвратаДиалога.Нет Тогда 
		Возврат
	КонецЕсли;	
	ОтказатьсяОтЗадачДокументаНаСервере();
	АнализЗадач();
	АнализЗакрытияФормы();
	КонецПроцедуры
&НаКлиенте
Процедура ОтказатьсяОтЗадачДокумента(Команда)
	Оповещение=новый ОписаниеОповещения("ОтказатьсяОтЗадачДокументаОповещение",ЭтаФорма);
	ПоказатьВопрос(Оповещение,"Вы уверены, что хотите отказаться от задач документа?",РежимДиалогаВопрос.ДаНет);
КонецПроцедуры

&НаКлиенте
Процедура ПечатьSSCCФилиала(Команда)
	ОткрытьФорму("Документ.итНаборка.Форма.ФормаГрупповойПечатиSSCCФилиала",новый Структура("ОбъектНаборки",Объект.Ссылка),ЭтаФорма);
	ТригерПриемаСканераШтрихКода=Ложь;
КонецПроцедуры
