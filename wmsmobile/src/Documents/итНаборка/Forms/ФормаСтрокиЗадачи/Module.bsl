#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если не Параметры.Свойство("МассивИдентификаторовСтрок") или не Параметры.Свойство("ИдЗадачи") 
		или не Параметры.Свойство("ИдентификаторУпаковкиОтправитель") или не Параметры.Свойство("ИдентификаторУпаковкиПолучатель") Тогда 
		Отказ = Истина;
		Возврат
	КонецЕсли;	
	ИдЗадачи=Параметры.ИдЗадачи;
	ИдентификаторУпаковкиОтправитель=Параметры.ИдентификаторУпаковкиОтправитель;
	ИдентификаторУпаковкиПолучатель=Параметры.ИдентификаторУпаковкиПолучатель;
	ЗадачаСМарками=ЗадачаПомарочногоУчета();
	ЗаполнитьДанныеСтрок(Параметры.МассивИдентификаторовСтрок);
КонецПроцедуры
&НаКлиенте
Процедура ДанныеСтрокSSCCВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	Если ТекущийЭлемент.Имя="ДанныеСтрокSSCC" Тогда
		Если ТекущийЭлемент.ТекущиеДанные.ПомарочныйУчет   тогда
			ОткрытьФорму("Документ.итНаборка.Форма.ФормаИзмененияСтроки",новый Структура("ИдЗадачи,ИдСтроки",ИдЗадачи,ТекущийЭлемент.ТекущиеДанные.ИдСтроки),ЭтаФорма);
		иначе
			ОткрытьФорму("Документ.итНаборка.Форма.ФормаВыбораДействия",новый Структура("ИдЗадачи,ИдСтроки,ПомарочныйУчет",ИдЗадачи,ТекущийЭлемент.ТекущиеДанные.ИдСтроки,
			ТекущийЭлемент.ТекущиеДанные.ПомарочныйУчет),ЭтаФорма);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
&НаКлиенте
Процедура ДанныеСтрокSSCCОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ДанныеСтрокSSCCОбработкаВыбораНаСервере();
КонецПроцедуры

&НаСервере
Процедура ДанныеСтрокSSCCОбработкаВыбораНаСервере()
	ТаблицаДанныеСтрокSSCC=   ДанныеСтрокSSCC.Выгрузить();
	МассивИдентификаторовСтрок=ТаблицаДанныеСтрокSSCC.ВыгрузитьКолонку("ИдСтроки");
	//ЗадачаСМарками= ЗадачаПомарочногоУчета();
	ЗаполнитьДанныеСтрок(МассивИдентификаторовСтрок);
КонецПроцедуры
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбщийМодульКлиентскойЧасти.ПереопределенияТригераПолучениеШтрихКодаПриОткрытии(ЭтаФорма);	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	ОбщийМодульКлиентскойЧасти.ПереопределенияТригераПолучениеШтрихКодаПриЗакрытии(ЭтаФорма);
	ВладелецФормы.ОбработкаОбновленияДанных();
КонецПроцедуры
&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Если ТипЗнч(ВыбранноеЗначение)=Тип("Структура") тогда
		Если ВыбранноеЗначение.Свойство("Действие") тогда
			Если НРег(СокрЛП(ВыбранноеЗначение.Действие))=НРег(СокрЛП("Подтверждена")) или 
				НРег(СокрЛП(ВыбранноеЗначение.Действие))=НРег(СокрЛП("Изменена"))  тогда
				ЭтаФорма.Закрыть();
				Возврат
			КонецЕсли;
		КонецЕсли;
		//Если ВыбранноеЗначение.Свойство("Строка") Тогда
		//	ОбновитьДанныеСтрокНаСервере(ВыбранноеЗначение.Строка);
		//	КонецЕсли;
		//КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд
&НаКлиенте
Процедура Назад(Команда)
	                                                                            
	ЭтаФорма.Закрыть();
	
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Процедура ОбновитьДанныеСтрокНаСервере(ИдСтроки)
	НаборЗаписей = РегистрыСведений.ИтСтрокиЗадачНаТСД.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ИдЗадачи.Установить(ИдЗадачи);
	НаборЗаписей.Отбор.ИдСтроки.Установить(ИдСтроки);
	НаборЗаписей.Прочитать();
	для Каждого Строка из НаборЗаписей цикл
		МассивСтрок=ДанныеСтрокSSCC.НайтиСтроки(новый Структура("ИдСтроки",ИдСтроки)) ;
		для Каждого стр из МассивСтрок цикл
			ЗаполнитьЗначенияСвойств(стр,Строка);
			ДанныеДокументаТСД=Строка.ДанныеДокументаТСД.Получить();
			Если ТипЗнч(ДанныеДокументаТСД) = тип("Структура") тогда
				ЗаполнитьЗначенияСвойств(стр,ДанныеДокументаТСД);
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры
&НаСервере
Процедура ЗаполнитьДанныеСтрок(МассивИдентификаторовСтрок)
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИтСтрокиЗадачНаТСД.ИдЗадачи КАК ИдЗадачи,
	|	ИтСтрокиЗадачНаТСД.ИдСтроки КАК ИдСтроки,
	|	ИтСтрокиЗадачНаТСД.Номенклатура КАК Номенклатура,
	|	ИтСтрокиЗадачНаТСД.НоменклатураПредставление КАК НоменклатураПредставление,
	|	ИтСтрокиЗадачНаТСД.ДатаРозлива КАК ДатаРозлива,
	|	ИтСтрокиЗадачНаТСД.СерияНоменклатуры КАК СерияНоменклатуры,
	|	ИтСтрокиЗадачНаТСД.СерияНоменклатурыПредставление КАК СерияНоменклатурыПредставление,
	|	ИтСтрокиЗадачНаТСД.Количество КАК Количество,
	|	ИтСтрокиЗадачНаТСД.ДополнительныеДанные КАК ДополнительныеДанные,
	|	ИтСтрокиЗадачНаТСД.ДанныеДокументаТСД КАК ДанныеДокументаТСД
	|ИЗ
	|	РегистрСведений.ИтСтрокиЗадачНаТСД КАК ИтСтрокиЗадачНаТСД
	|ГДЕ
	|	ИтСтрокиЗадачНаТСД.ИдЗадачи = &ИдЗадачи
	|	И ИтСтрокиЗадачНаТСД.ИдСтроки В(&ИдСтроки)";
	
	Запрос.УстановитьПараметр("ИдЗадачи", ИдЗадачи);
	Запрос.УстановитьПараметр("ИдСтроки", МассивИдентификаторовСтрок);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	ДанныеСтрокSSCC.Очистить();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НоваяСтрока=ДанныеСтрокSSCC.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,ВыборкаДетальныеЗаписи);
		ДанныеДокументаТСД=ВыборкаДетальныеЗаписи.ДанныеДокументаТСД.Получить();
		Если ТипЗнч(ДанныеДокументаТСД) = тип("Структура") тогда
			ЗаполнитьЗначенияСвойств(НоваяСтрока,ДанныеДокументаТСД);
		КонецЕсли;
		ДополнительныеДанные=ВыборкаДетальныеЗаписи.ДополнительныеДанные.Получить();
		Если ТипЗнч(ДополнительныеДанные) = тип("Структура") тогда
			Если ДополнительныеДанные.Свойство("ПомарочныйУчет") Тогда 
				Если  ДополнительныеДанные.ПомарочныйУчет Тогда 
						НоваяСтрока.КоличествоФакт=ПолучитьКоличествоОтсканированныхМарокТекущейПродукции(НоваяСтрока.Номенклатура,НоваяСтрока.СерияНоменклатуры);
						НоваяСтрока.ПомарочныйУчет=ДополнительныеДанные.ПомарочныйУчет;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
	
КонецПроцедуры

&НаСервере		
Функция ПолучитьКоличествоОтсканированныхМарокТекущейПродукции(Номенклатура,СерияНоменклатуры)
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ итДанныеПомарочногоУчета.Марка) КАК Марка,
	|	итДанныеПомарочногоУчета.Ключ КАК Ключ
	|ИЗ
	|	РегистрСведений.итДанныеПомарочногоУчета КАК итДанныеПомарочногоУчета
	|ГДЕ
	|	итДанныеПомарочногоУчета.Ключ = &Ключ
	|	И итДанныеПомарочногоУчета.Номенклатура = &Номенклатура
	|	И итДанныеПомарочногоУчета.СерияНоменклатуры = &СерияНоменклатуры
	|	И итДанныеПомарочногоУчета.ПризнакОбработки = ИСТИНА
	|	И итДанныеПомарочногоУчета.SSCC = &SSCC
	|
	|СГРУППИРОВАТЬ ПО
	|	итДанныеПомарочногоУчета.Ключ";
	
	Запрос.УстановитьПараметр("Ключ", ИдЗадачи);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("СерияНоменклатуры", СерияНоменклатуры);
	Запрос.УстановитьПараметр("SSCC",ИдентификаторУпаковкиОтправитель);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если  ВыборкаДетальныеЗаписи.Следующий() Тогда 
		Возврат   ВыборкаДетальныеЗаписи.Марка;
	КонецЕсли;
	Возврат 0;
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
КонецФункции
&НаСервере
Функция ЗадачаПомарочногоУчета()
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	итДанныеПомарочногоУчета.Марка КАК Марка
	|ИЗ
	|	РегистрСведений.итДанныеПомарочногоУчета КАК итДанныеПомарочногоУчета
	|ГДЕ
	|	итДанныеПомарочногоУчета.Ключ = &Ключ
	|
	|СГРУППИРОВАТЬ ПО
	|	итДанныеПомарочногоУчета.Марка";
	
	Запрос.УстановитьПараметр("Ключ", ИдЗадачи);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если  ВыборкаДетальныеЗаписи.Следующий() Тогда 
		Возврат Истина;
	КонецЕсли;
	Возврат Ложь;
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
КонецФункции


#КонецОбласти