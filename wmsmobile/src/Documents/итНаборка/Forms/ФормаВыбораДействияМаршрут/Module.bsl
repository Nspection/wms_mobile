
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбщийМодульКлиентскойЧасти.ПереопределенияТригераПолучениеШтрихКодаПриОткрытии(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	ОбщийМодульКлиентскойЧасти.ПереопределенияТригераПолучениеШтрихКодаПриЗакрытии(ЭтаФорма);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("МаршрутГУИД") Тогда 
		ИдМаршрута=Параметры.МаршрутГУИД;
	КонецЕсли;
	Если Параметры.Свойство("Маршрут") Тогда 
		ПредставлениеМаршрута=Параметры.Маршрут;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПринятьМаршрутНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	итЗадачиКРаспределениюДополнительныеДанные.ИдЗадачи КАК ИдЗадачи
		|ПОМЕСТИТЬ ВТ
		|ИЗ
		|	РегистрСведений.итЗадачиКРаспределениюДополнительныеДанные КАК итЗадачиКРаспределениюДополнительныеДанные
		|ГДЕ
		|	итЗадачиКРаспределениюДополнительныеДанные.Реквизит1ГУИД = &ИдМаршрута
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	итЗадачиКРаспределению.ДокументОснование КАК ДокументОснование,
		|	МАКСИМУМ(итЗадачиКРаспределению.ИдЗадачи) КАК ИдЗадачи,
		|	итЗадачиКРаспределению.ТипЗадачи КАК ТипЗадачи
		|ИЗ
		|	ВТ КАК ВТ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.итЗадачиКРаспределению КАК итЗадачиКРаспределению
		|		ПО ВТ.ИдЗадачи = итЗадачиКРаспределению.ИдЗадачи
		|
		|СГРУППИРОВАТЬ ПО
		|	итЗадачиКРаспределению.ДокументОснование,
		|	итЗадачиКРаспределению.ТипЗадачи";
	
	Запрос.УстановитьПараметр("ИдМаршрута", ИдМаршрута);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		//СлужебныеФункцииИПроцедурыКлиентСервер.ДобавитьВЛог(ВыборкаДетальныеЗаписи.ИдЗадачи,"#НаборкаВыбораДействияМаршрут Взятие наборки на сервере",ВыборкаДетальныеЗаписи.ДокументОснование);		
		СтруктураДанных=новый Структура;
		СлужебныеФункцииИПроцедурыКлиентСервер.СформироватьСтруктуруДанныхОПользователе(СтруктураДанных);
		СтруктураДанных.Вставить("ТипПолученияДанных","Документ");
		СтруктураДанных.Вставить("КлючПолученияДанных",ВыборкаДетальныеЗаписи.ИдЗадачи);
		СтруктураДанных.Вставить("ТипЗадачи",ВыборкаДетальныеЗаписи.ТипЗадачи);
		СтруктураДанных=ОбработчикиЗапросаСервера.ЗапроситьДанные(СтруктураДанных,"DataRegistrationAndDonload");
		Если СлужебныеФункцииИПроцедурыКлиентСервер.ТиповойОбработчикОшибок(СтруктураДанных)тогда
			Возврат
		КонецЕсли;
		//СлужебныеФункцииИПроцедурыКлиентСервер.ДобавитьВЛог(ВыборкаДетальныеЗаписи.ИдЗадачи,"#НаборкаВыбораДействияМаршрут Пришёл ответ по наборке с сервера,начало обработки на тсд",ВыборкаДетальныеЗаписи.ДокументОснование);	
		МодульРаспределенияДанных.ОбработчикВходящихДанных(СтруктураДанных);
		//СлужебныеФункцииИПроцедурыКлиентСервер.ДобавитьВЛог(ВыборкаДетальныеЗаписи.ИдЗадачи,"#НаборкаВыбораДействияМаршрут Обработан на тсд",ВыборкаДетальныеЗаписи.ДокументОснование);	
	КонецЦикла;
	


КонецПроцедуры

&НаКлиенте
Процедура ПринятьМаршрут(Команда)
	ПринятьМаршрутНаСервере();
	ОткрытьФорму("Обработка.ДиспетчерЗадач.Форма.ЗадачиНаТСДПоРазделам",,ЭтаФорма.ВладелецФормы);
	ТригерПриемаСканераШтрихКода=Ложь;
	ЭтаФорма.Закрыть();
КонецПроцедуры
