
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если не Параметры.Свойство("ОбъектДанных") тогда
		Отказ=Истина;
		Возврат
	КонецЕсли;
	Если не Параметры.Свойство("SSCC") тогда	
		Отказ=Истина;
		Возврат
	КонецЕсли;
	Если не Параметры.Свойство("GTIN") тогда	
		Отказ=Истина;
		Возврат
	КонецЕсли;	
	Если Объект.МаксимальноеКоличествоВКоробе>0 Тогда 
		МаксимальноеКоличество=Объект.МаксимальноеКоличествоВКоробе;
	иначе
		МаксимальноеКоличество=999999999999999;
	КонецЕсли;	
	Объект=Параметры.ОбъектДанных;
	SSCC=Параметры.SSCC;
    GTIN=Параметры.GTIN;

	ЗаполитьДАннымSSCCGTIN();
КонецПроцедуры

&НаСервере
Процедура ЗаполитьДАннымSSCCGTIN()
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	итДокументСвободнойАгрегацииДанныеАгрегации.SSCC КАК SSCC,
	|	итДокументСвободнойАгрегацииДанныеАгрегации.GTIN КАК GTIN,
	|	итДокументСвободнойАгрегацииДанныеАгрегации.Интервал КАК Интервал,
	|	итДокументСвободнойАгрегацииДанныеАгрегации.Марка КАК Марка
	|ИЗ
	|	Документ.итДокументСвободнойАгрегации.ДанныеАгрегации КАК итДокументСвободнойАгрегацииДанныеАгрегации
	|ГДЕ
	|	итДокументСвободнойАгрегацииДанныеАгрегации.Ссылка = &Ссылка
	|	И итДокументСвободнойАгрегацииДанныеАгрегации.SSCC = &SSCC
	|	И итДокументСвободнойАгрегацииДанныеАгрегации.GTIN = &GTIN";
	
	Запрос.УстановитьПараметр("SSCC", SSCC);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("GTIN",GTIN);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	СоставляющиеSSCCGTIN.Очистить();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(СоставляющиеSSCCGTIN.Добавить(),ВыборкаДетальныеЗаписи)
	КонецЦикла;
	Количество=СоставляющиеSSCCGTIN.Количество();
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия="ОбработчикШтрихКода"  и ТригерПриемаСканераШтрихКода тогда
		Если Параметр=404 и Источник="ОшибкаЧтения" тогда
			ОбщийМодульКлиентскойЧасти.СообщитьЧерезФорму("Штрих код некорректен");
			Возврат
		КонецЕсли;
		ОбработчикШтрихКода(Параметр);
	КонецЕсли;	
	//ПроверитьШтрихКодНаФормат(Параметр);
	
КонецПроцедуры
&НаКлиенте
Процедура ОбработчикШтрихКода(ШтрихКод)
	Если не ЗначениеЗаполнено(ДатаРозлива) тогда
		Сообщить("Заполните дату розлива");
		Возврат
	КонецЕсли;	
	Если Элементы.СканируйтеКонтрольнуюМарку_Интервал_Номенклатуру.Заголовок="Сканируйте номенклатуру" тогда
		ЗаполнитьДаннымиНоменклатурыНаСервере(ШтрихКод);
		Возврат
	КонецЕсли;
	Если Количество>=МаксимальноеКоличество Тогда 
		Сообщить("Вы пытаеть положить в короб больше установленного вами максимального количества");
	КонецЕсли;	
	
 	Если СтрДлина(ШтрихКод)=68 или СтрДлина(ШтрихКод)=150 тогда
		МаркаБуфера=ШтрихКод;
		Элементы.СканируйтеКонтрольнуюМарку_Интервал_Номенклатуру.Заголовок="Сканируйте интервал";
		Если  СтрДлина(ШтрихКод)=150  Тогда 
				ИнтервалБуфера=Сред(ШтрихКод,4,3)+"_"+Сред(ШтрихКод,7,8);;
		КонецЕсли;
	ИначеЕсли Сред(ШтрихКод,4,1)="-"  тогда
		КоличествоСимволовОтклонения=33-СтрДлина(ШтрихКод);
		СтрокаКОтправке=Сред(ШтрихКод,5,11-КоличествоСимволовОтклонения);
		Серия=Лев(СтрокаКОтправке,3);
		Номер=Прав(СтрокаКОтправке,СтрДлина(СтрокаКОтправке)-3);
		ИнтервалБуфера=Серия+"_"+Номер;
		Элементы.СканируйтеКонтрольнуюМарку_Интервал_Номенклатуру.Заголовок="Сканируйте марку";
		//ОповеститьОВыборе(СтрокаКОтправке);
	иначе
		Сообщить("не верный формат штрих кода");
	КонецЕсли;
	Если ЗначениеЗаполнено(ИнтервалБуфера) и ЗначениеЗаполнено(МаркаБуфера) тогда		
		ДобавитьДанныеSCCGTINнаСервере();
		ИнтервалБуфера="";
		МаркаБуфера="";
		ЗаполитьДАннымSSCCGTIN();
		Элементы.СканируйтеКонтрольнуюМарку_Интервал_Номенклатуру.Заголовок="Сканируйте контрольную марку интервал";
	КонецЕсли;
	
КонецПроцедуры
&НаСервере

Процедура ДобавитьДанныеSCCGTINнаСервере()
	Если НетТакихДанных() тогда
	ОбъектДанных=Объект.ПолучитьОбъект();
	НоваяСтрока=ОбъектДанных.ДанныеАгрегации.Добавить();
	НоваяСтрока.GTIN=GTIN;
	НоваяСтрока.SSCC=SSCC;
	НоваяСтрока.Номенклатура=НоменклатураБуфера;
	НоваяСтрока.НоменклатураПредставление=НоменклатураБуфераПредставление;
	НоваяСтрока.ДатаРозлива=ДатаРозлива;
	НоваяСтрока.Интервал=ИнтервалБуфера;
	НоваяСтрока.Марка=МаркаБуфера;
	ОбъектДанных.Записать();
    КонецЕсли;	
КонецПроцедуры
Функция НетТакихДанных()
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	итДокументСвободнойАгрегацииДанныеАгрегации.GTIN КАК GTIN,
		|	итДокументСвободнойАгрегацииДанныеАгрегации.SSCC КАК SSCC,
		|	итДокументСвободнойАгрегацииДанныеАгрегации.Интервал КАК Интервал,
		|	итДокументСвободнойАгрегацииДанныеАгрегации.Марка КАК Марка
		|ИЗ
		|	Документ.итДокументСвободнойАгрегации.ДанныеАгрегации КАК итДокументСвободнойАгрегацииДанныеАгрегации
		|ГДЕ
		|	итДокументСвободнойАгрегацииДанныеАгрегации.Ссылка = &Ссылка
		|	И итДокументСвободнойАгрегацииДанныеАгрегации.Марка = &Марка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	итДокументСвободнойАгрегацииДанныеАгрегации.SSCC КАК SSCC,
		|	итДокументСвободнойАгрегацииДанныеАгрегации.GTIN КАК GTIN,
		|	итДокументСвободнойАгрегацииДанныеАгрегации.Интервал КАК Интервал,
		|	итДокументСвободнойАгрегацииДанныеАгрегации.Марка КАК Марка
		|ИЗ
		|	Документ.итДокументСвободнойАгрегации.ДанныеАгрегации КАК итДокументСвободнойАгрегацииДанныеАгрегации
		|ГДЕ
		|	итДокументСвободнойАгрегацииДанныеАгрегации.Ссылка = &Ссылка
		|	И итДокументСвободнойАгрегацииДанныеАгрегации.Интервал = &Интервал";
	

	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("Интервал",ИнтервалБуфера);
	Запрос.УстановитьПараметр("Марка",МаркаБуфера);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ВыборкаДетальныеЗаписиМарки = МассивРезультатов[0].Выбрать();
	ВыборкаДетальныеЗаписиИнтервала = МассивРезультатов[1].Выбрать(); 
	Если  ВыборкаДетальныеЗаписиМарки.Следующий() тогда
		Сообщить("марка числится за SSCC "+ВыборкаДетальныеЗаписиМарки.SSCC+" и GTIN "+ ВыборкаДетальныеЗаписиМарки.GTIN);
		Возврат Ложь
	КонецЕсли;
	Если  ВыборкаДетальныеЗаписиИнтервала.Следующий() тогда
		Сообщить("интервал числится за SSCC "+ВыборкаДетальныеЗаписиИнтервала.SSCC+" и GTIN "+ ВыборкаДетальныеЗаписиИнтервала.GTIN);
		Возврат Ложь
    КонецЕсли;
	Возврат Истина;
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
	КонецФункции
&НаКлиенте
Процедура Очистить(Команда)
	Оповещение = новый ОписаниеОповещения("ОчиститьОповещение",ЭтаФорма);
	ПоказатьВопрос(Оповещение,"Вы точно хотите очистить данные короба",РежимДиалогаВопрос.ДаНет);

КонецПроцедуры
&НаКлиенте
Процедура ОчиститьОповещение(Результат,Параметры) Экспорт
	Если Результат = КодВозвратаДиалога.Нет тогда
		Возврат
	КонецЕсли;
  ОчиститьНаСервере();
  ЭтаФорма.Закрыть();	
КонецПроцедуры
&НаСервере
Процедура ОчиститьНаСервере()
	ОбъектДанных = Объект.ПолучитьОбъект();
	Строки=ОбъектДанных.ДанныеАгрегации.НайтиСтроки(новый Структура("SSCC,GTIN",SSCC,GTIN));
	для Каждого стр из Строки цикл
		ОбъектДанных.ДанныеАгрегации.Удалить(стр);
	КонецЦикла;
	СтрокиSSCC=ОбъектДанных.ДанныеАгрегации.НайтиСтроки(новый Структура("SSCC",SSCC));
	
	
	Если СтрокиSSCC.Количество()=0 тогда
	ОбъектДанных.ДанныеАгрегации.Добавить().SSCC=SSCC;
	КонецЕсли;
	ОбъектДанных.Записать();
	СоставляющиеSSCCGTIN.Очистить();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбщийМодульКлиентскойЧасти.ПереопределенияТригераПолучениеШтрихКодаПриОткрытии(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	ОбщийМодульКлиентскойЧасти.ПереопределенияТригераПолучениеШтрихКодаПриЗакрытии(ЭтаФорма);
	ОповеститьОВыборе("");
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	ЭтаФорма.Закрыть();
КонецПроцедуры
&НаСервере
Процедура ЗаполнитьДаннымиНоменклатурыНаСервере(ШтрихКод)
СтруктураЗапросаДанных=новый Структура;
СтруктураЗапросаДанных.Вставить("КлючОперации","ПолучитьДанныеПоШтрихКодуНоменклатуры");
СтруктураЗапросаДанных.Вставить("КлючПолученияДанных",ШтрихКод);
СтруктураЗапросаДанных=ОбработчикиЗапросаСервера.ЗапроситьДанные(СтруктураЗапросаДанных,"ServiceFunction");
Если СлужебныеФункцииИПроцедурыКлиентСервер.ТиповойОбработчикОшибок(СтруктураЗапросаДанных,"Номенклатура") тогда
	Возврат
КонецЕсли;
Если СлужебныеФункцииИПроцедурыКлиентСервер.ТиповойОбработчикОшибок(СтруктураЗапросаДанных,"НоменклатураПредставление") тогда
	Возврат
КонецЕсли;
Если СлужебныеФункцииИПроцедурыКлиентСервер.ТиповойОбработчикОшибок(СтруктураЗапросаДанных,"Количество") тогда
	Возврат
КонецЕсли;
Если СтруктураЗапросаДанных.Количество>1 тогда
	Сообщить("Сканирован штрихкод короба,а необходим штрихкод номенклатуры");
	Возврат
КонецЕсли;
НоменклатураБуфера=СтруктураЗапросаДанных.Номенклатура;
НоменклатураБуфераПредставление=СтруктураЗапросаДанных.НоменклатураПредставление;
Элементы.СканируйтеКонтрольнуюМарку_Интервал_Номенклатуру.Заголовок="Сканируйте марку и интервал";	
	КонецПроцедуры
&НаКлиенте
Процедура Сменить(Команда)
	Элементы.СканируйтеКонтрольнуюМарку_Интервал_Номенклатуру.Заголовок="Сканируйте номенклатуру";
КонецПроцедуры

&НаКлиенте
Процедура СканироватьSSCCGTIN(Команда)
	ОткрытьФорму("Документ.итДокументСвободнойАгрегации.Форма.ФормаПолученияМарокПоSSCCGTIN",,ЭтаФорма);
	ТригерПриемаСканераШтрихКода=Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Если	ИсточникВыбора.ИмяФормы= "Документ.итДокументСвободнойАгрегации.Форма.ФормаПолученияМарокПоSSCCGTIN" тогда
		НоменклатураБуфера=ВыбранноеЗначение.Номенклатура;
		НоменклатураБуфераПредставление=ВыбранноеЗначение.НоменклатураНаименование;
		ДатаРозлива=ВыбранноеЗначение.ДатаРозлива;
		ЗаполнитьМаркамиИзМассива(ВыбранноеЗначение.МассивМарок);
	    ЗаполитьДАннымSSCCGTIN();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьМаркамиИзМассива(МассивМарок)
	ОбъектДанных=Объект.ПолучитьОбъект();
	Для Каждого стр из МассивМарок Цикл
		МаркаБуфера=стр;
		Если  СтрДлина(стр)=150  Тогда 
			ИнтервалБуфера=Сред(стр,4,3)+"_"+Сред(стр,7,8);
		иначе
			ИнтервалБуфера="00000000";
		КонецЕсли;
		Если НетТакихДанных() тогда
			НоваяСтрока=ОбъектДанных.ДанныеАгрегации.Добавить();
			НоваяСтрока.GTIN=GTIN;
			НоваяСтрока.SSCC=SSCC;
			НоваяСтрока.Номенклатура=НоменклатураБуфера;
			НоваяСтрока.НоменклатураПредставление=НоменклатураБуфераПредставление;
			НоваяСтрока.ДатаРозлива=ДатаРозлива;
			НоваяСтрока.Интервал=ИнтервалБуфера;
			НоваяСтрока.Марка=МаркаБуфера;
		КонецЕсли;		
	КонецЦикла;
	ОбъектДанных.Записать();

	КонецПроцедуры