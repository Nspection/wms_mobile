
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("ПомарочныйУчет") тогда
		ПомарочныйУчет=Параметры.ПомарочныйУчет;
		Если не Параметры.Свойство("Объект") Тогда 
			Отказ=Истина;
		КонецЕсли;
		Если не Параметры.Свойство("ИдентификаторУпаковки") Тогда 
			Отказ=Истина;
		КонецЕсли;

		Объект=Параметры.Объект;
		ИдентификаторУпаковки=Параметры.ИдентификаторУпаковки;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбщийМодульКлиентскойЧасти.ПереопределенияТригераПолучениеШтрихКодаПриОткрытии(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	ОбщийМодульКлиентскойЧасти.ПереопределенияТригераПолучениеШтрихКодаПриЗакрытии(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия="ОбработчикШтрихКода"  и ТригерПриемаСканераШтрихКода тогда
		Если Параметр=404 и Источник="ОшибкаЧтения" тогда
			ОбщийМодульКлиентскойЧасти.СообщитьЧерезФорму("Штрих код некорректен");
			Возврат
		КонецЕсли;	
		Если СтрДлина(Параметр)>=68 и КонтрольнаяМарка="" тогда
			КонтрольнаяМарка=Параметр;
			Если ПомарочныйУчет Тогда 
				Если не ПроверкаМаркиНаНаличиеВДанныхПомарочногоУчета() тогда
				КонтрольнаяМарка="";
				ОбщийМодульКлиентскойЧасти.СообщитьЧерезФорму("Марка не числится в данных помарочного учета");
				Возврат
				КонецЕсли;
			КонецЕсли;	
			Элементы.СканируйтеКонтрольнуюМарку_Интервал.Заголовок="Сканируйте интервал";
			Если  СтрДлина(Параметр)>68  Тогда 
				Интервал="000_000000000000";
			КонецЕсли;
		ИначеЕсли Сред(Параметр,4,1)="-" и Интервал=""   тогда
		    КоличествоСимволовОтклонения=33-СтрДлина(Параметр);
			СтрокаКОтправке=Сред(Параметр,5,11-КоличествоСимволовОтклонения);
			Серия=Лев(СтрокаКОтправке,3);
			Номер=Прав(СтрокаКОтправке,СтрДлина(СтрокаКОтправке)-3);
			Интервал=Серия+"_"+Номер;
			Элементы.СканируйтеКонтрольнуюМарку_Интервал.Заголовок="Сканируйте марку";
			//ОповеститьОВыборе(СтрокаКОтправке);
		иначе
			Сообщить("не верный формат штрих кода");
		КонецЕсли;
		Если ЗначениеЗаполнено(КонтрольнаяМарка) и ЗначениеЗаполнено(Интервал) тогда	
			ОповеститьОВыборе(новый Структура("КонтрольнаяМарка,Интервал",КонтрольнаяМарка,Интервал));
        КонецЕсли;
	КонецЕсли;
	КонецПроцедуры

&НаСервере
Функция ПроверкаМаркиНаНаличиеВДанныхПомарочногоУчета()
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИтЗадачиНаТСД.ИдЗадачи
		|ПОМЕСТИТЬ ЗадачиДокумента
		|ИЗ
		|	РегистрСведений.ИтЗадачиНаТСД КАК ИтЗадачиНаТСД
		|ГДЕ
		|	ИтЗадачиНаТСД.ДокументОснование = &ДокументОснование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	итДанныеПомарочногоУчета.Марка,
		|	итДанныеПомарочногоУчета.SSCC,
		|	итДанныеПомарочногоУчета.GTIN
		|ПОМЕСТИТЬ ДанныеМарокДокумента
		|ИЗ
		|	ЗадачиДокумента КАК ЗадачиДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.итДанныеПомарочногоУчета КАК итДанныеПомарочногоУчета
		|		ПО ЗадачиДокумента.ИдЗадачи = итДанныеПомарочногоУчета.Ключ
		|СГРУППИРОВАТЬ ПО
		|	итДанныеПомарочногоУчета.Марка,
		|	итДанныеПомарочногоУчета.SSCC,
		|	итДанныеПомарочногоУчета.GTIN
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеМарокДокумента.Марка,
		|	ДанныеМарокДокумента.SSCC,
		|	ДанныеМарокДокумента.GTIN,
		|	ВЫБОР
		|		КОГДА ДанныеМарокДокумента.SSCC = &SSCC
		|			Тогда Ложь
		|		ИНАЧЕ Истина
		|	КОНЕЦ КАК НеТотSSCC
		|ИЗ
		|	ДанныеМарокДокумента КАК ДанныеМарокДокумента
		|ГДЕ
		|	ДанныеМарокДокумента.Марка = &Марка";
	
	Запрос.УстановитьПараметр("Марка", КонтрольнаяМарка);
	Запрос.УстановитьПараметр("ДокументОснование", Объект);
	Запрос.УстановитьПараметр("SSCC", ИдентификаторУпаковки);

	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() тогда
		Возврат Ложь;
	иначе
		Выборка=РезультатЗапроса.Выбрать();
		Если Выборка.Следующий() тогда
			Если  Выборка.НеТотSSCC тогда
				Сообщить("Марка в данных есть, но принадлежит паллету № "+Выборка.SSCC);
				Возврат Ложь
			иначе
				Возврат Истина;
			КонецЕсли;
		иначе
			Возврат Ложь;
		КонецЕсли;	
	КонецЕсли;	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
		
КонецФункции