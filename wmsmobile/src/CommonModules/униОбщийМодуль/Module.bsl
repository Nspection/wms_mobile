Функция НоваяСтруктураЗапросакUWS(Код = "") Экспорт
	НовСтрукт = Новый Структура;
	НовСтрукт.Вставить("КодСправочника",?(ПустаяСтрока(Код),"200000010",код));   // под этим кодом должна быть сохранена обработка UWS
	
	Возврат НовСтрукт;
	
	
КонецФункции // \()


Функция ДанныеИзUWS(СтруктураДанных) Экспорт
	
	Определение = Новый WSОпределения(Константы.униАдресДляПодключенияКУниверсальномуВебСервису.Получить(),Константы.униПользователь1С.Получить(),Константы.униПользователь1СПароль.Получить());
	  
	Прокси = Новый WSПрокси(Определение, "universalwebserv", "universalwebserv", "universalwebservSoap");  
	//	Прокси.ИспользоватьАутентификациюОС = Ложь;
	Прокси.Пользователь = Константы.униПользователь1С.Получить();  
	Прокси.Пароль = Константы.униПользователь1СПароль.Получить();  
	СериализованнаяСтруктураДанных = ОбработчикHTTP.СериализаторДанных(	СтруктураДанных);
	
	ДанныеЗаявкиXML = Прокси.universal(СериализованнаяСтруктураДанных);
	ДанныеЗаявки = ОбработчикHTTP.ДесериализаторДанных(ДанныеЗаявкиXML);
	Определение = неопределено;
	Прокси = Неопределено;
	Возврат  ДанныеЗаявки;
КонецФункции // ()




Функция ПолучитьДоступКUWS(ИД) Экспорт
	Если Найти(ИД,"Балблабла")>0 Тогда
	
		 ПараметрыСеанса.ТекущийПользователь = "Балблабла";
		 Возврат Истина;
	КонецЕсли; 
	СтруктураЗапроса = НоваяСтруктураЗапросакUWS();
	СтруктураЗапроса.Вставить("ИмяМетода","Авторизация");
	СтруктураЗапроса.Вставить("ИДПользователя",СтрЗаменить(СтрЗаменить(ИД,"UWS#",""),"uws#",""));
	УспехАвторизации = Истина;
	Попытка
		ОтветСервера =  ДанныеИзUWS(СтруктураЗапроса);
	Исключение
		УспехАвторизации = Ложь;
		ОтветСервера = "Ошибка";
	КонецПопытки; 
	
	Если ТипЗнч(ОтветСервера) = Тип("Структура") Тогда
		СвойствоПредоставленДоступ = ОтветСервера.Свойство("ДоступПредоставлен");
		Если СвойствоПредоставленДоступ = Неопределено Тогда
		
			 УспехАвторизации = Ложь;
		
		КонецЕсли; 
		Если ОтветСервера.ДоступПредоставлен  Тогда
			
			ПараметрыСеанса.ТекущийПользователь =  ОтветСервера.ПолноеИмяПользователя;
			
			Возврат Истина;
		иначе 
			УспехАвторизации = Ложь;
			
		КонецЕсли; 
	Иначе 
		УспехАвторизации = Ложь;
		
	КонецЕсли; 
	
	Возврат УспехАвторизации;   
	
КонецФункции // ()

Процедура УстановитьПараметрыСеанса(ИД) Экспорт
	
	ПараметрыСеанса.униРежимПодключенияЧерезUWS = Истина;
	ПараметрыСеанса.ТекущийПользовательУИД = СтрЗаменить(СтрЗаменить(ИД,"UWS#",""),"uws#","");
	//ПараметрыСеанса.ТекущийПользователь = "1"; //потом нужно прочитать из UWS
	ПараметрыСеанса.Роль = "uwsПользователь";
	ПараметрыСеанса.Принтер = "";
	ПараметрыСеанса.Территория ="";
КонецПроцедуры


Функция ОпрределитьТипСчитанногоШК(ШтрихКодУчета) Экспорт
	Если СтрДлина(ШтрихКодУчета) = 26 Тогда
		Если Сред(ШтрихКодУчета,13,1) = "2"   Тогда      
			Возврат "Палета";
		КонецЕсли; 
	КонецЕсли; 
	Если СтрДлина(ШтрихКодУчета) = 26 Тогда
		Если Сред(ШтрихКодУчета,13,1) = "4"   Тогда      
			Возврат "СборнаяПалета";
		КонецЕсли; 
	КонецЕсли; 
	Если СтрДлина(ШтрихКодУчета) = 26 Тогда
		Если Сред(ШтрихКодУчета,13,1) = "1"   Тогда      
			Возврат "Короб";
		КонецЕсли; 
	КонецЕсли; 
	Если СтрДлина(ШтрихКодУчета) = 26 Тогда
		Если Сред(ШтрихКодУчета,13,1) = "3"   Тогда      
			Возврат "СборныйКороб";
		КонецЕсли; 
	КонецЕсли; 
	Если СтрДлина(ШтрихКодУчета) = 18 Тогда
		Возврат "SSCC18";
	КонецЕсли; 
	Если СтрДлина(ШтрихКодУчета) = 20 Тогда
		Если Лев(ШтрихКодУчета,2) = "00"   Тогда      
			Возврат "SSCC20";
		КонецЕсли; 
	КонецЕсли; 
	Если СтрДлина(ШтрихКодУчета) = 68 Тогда
		Если Лев(ШтрихКодУчета,3) = "22N"   Тогда      
			Возврат "ФСМ2012";
		КонецЕсли; 
	КонецЕсли; 
	Если СтрДлина(ШтрихКодУчета) = 150 Тогда
		Возврат "ФСМ2018";
	КонецЕсли; 
	
	Если СтрДлина(ШтрихКодУчета) = 34 Тогда
		Если Сред(ШтрихКодУчета,4,1) = "-"   Тогда      
			Возврат "ФСМ2012ДМ";
		КонецЕсли; 
	КонецЕсли; 
	Возврат "Прочий";   
КонецФункции // ()


Функция ВернутьКодЛинииПереагрегации(ОбновитьИзБольшойБазы = Ложь)  Экспорт
	
	КодЛинии = Константы.униКодЛинииПереагрегации.Получить();
	Если Не ПустаяСтрока(КодЛинии) Тогда
		Если НЕ ОбновитьИзБольшойБазы Тогда
			Возврат КодЛинии;
		КонецЕсли; 
	КонецЕсли; 
	СтруктураЗапроса = НоваяСтруктураЗапросакUWS();
	СтруктураЗапроса.Вставить("ИмяМетода","ПолучениеЗначенияКодаЛинииПереагерегации");
	Попытка
		ОтветСервера =  ДанныеИзUWS(СтруктураЗапроса);
	Исключение
		ОтветСервера = "Ошибка";
	КонецПопытки; 
	Если ТипЗнч(ОтветСервера) = Тип("Структура") Тогда
		Если ОтветСервера.Свойство("КодЛинииПереагрегации") Тогда
			
			Возврат  ОтветСервера.КодЛинииПереагрегации;
			
		КонецЕсли;  
	КонецЕсли; 
	Возврат Неопределено;	 
КонецФункции // ()

//////
// ПОЧТА
Функция итПрофильДляОтправкиСообщения(ПортSMTP,АдресСервераSMTP,ПарольSMTP,ПользовательSMTP) Экспорт
	Профиль = Новый ИнтернетПочтовыйПрофиль;
	профиль.ПортSMTP    =ПортSMTP;
	профиль.POP3ПередSMTP    =Ложь;
	профиль.АдресСервераIMAP    ="";
	профиль.АдресСервераPOP3    ="";
	профиль.АдресСервераSMTP=    АдресСервераSMTP;
	профиль.АутентификацияPOP3=СпособPOP3Аутентификации.Обычная;
	профиль.АутентификацияSMTP=СпособSMTPАутентификации.ПоУмолчанию;
	профиль.ИспользоватьSSLIMAP    = Ложь;
	профиль.ИспользоватьSSLPOP3    = Ложь;
	профиль.ИспользоватьSSLSMTP    = Истина;
	профиль.Пароль    ="";
	профиль.ПарольIMAP    ="";
	профиль.ПарольSMTP    = ПарольSMTP;
	профиль.Пользователь    ="";
	профиль.ПользовательIMAP    ="";
	профиль.ПользовательSMTP =    ПользовательSMTP;
	профиль.ПортIMAP    =0;
	профиль.ПортPOP3=    0;
	профиль.Таймаут    =30;
	профиль.ТолькоЗащищеннаяАутентификацияIMAP    =Ложь;
	профиль.ТолькоЗащищеннаяАутентификацияPOP3    =Ложь;
	профиль.ТолькоЗащищеннаяАутентификацияSMTP    =Ложь;
	
	Возврат Профиль;
	
КонецФункции	
//
// ВложениеМассивомПолныхИменФайлов   - это массив куда помещены полные имена файлов 
//

Функция итСообщениеДляОтправки(Отправитель,ПолучателиМассив,Тема,ТекстСообщения,ВложениеМассивомПолныхИменФайлов,ОбратныйАдрес="")   Экспорт
	
	Сообщение = Новый ИнтернетПочтовоеСообщение;
	
	Сообщение.Отправитель = СокрЛП(Отправитель);
	Сообщение.ОбратныйАдрес.Добавить(ОбратныйАдрес);
	Для каждого ТекПолучатель Из ПолучателиМассив Цикл
		
		Сообщение.Получатели.Добавить(СокрЛП(ТекПолучатель));
		
	КонецЦикла; 
	
	Сообщение.Тема = СокрЛП(Тема);
	Сообщение.Тексты.Добавить(ТекстСообщения);
	Для каждого ТекФайл Из ВложениеМассивомПолныхИменФайлов Цикл
		
		ФайлНаДиске =ТекФайл;
		Если НЕ ФайлНаДиске.Существует() Тогда
			Продолжить;
		КонецЕсли; 
		Сообщение.Вложения.Добавить(Новый ДвоичныеДанные(ФайлНаДиске.ПолноеИмя),ФайлНаДиске.Имя);
	КонецЦикла; 
	Возврат Сообщение;
КонецФункции // ()

Функция итОтправитьСообщение(Профиль,Сообщение) Экспорт
	Почта = Новый ИнтернетПочта;
	Успех =Истина;
	Попытка 
		//Состояние("Отправка почтового сообщения...");
		Почта.Подключиться(Профиль);
		Почта.Послать(Сообщение);
		 
		 	
		 
		#Если НаКлиенте Тогда
		 
		СообщитьИнформациюНаКлиенте_А1("Сообщения успешно отправлены!");
		#КонецЕсли
	Исключение
		#Если НаКлиенте Тогда

		СообщитьИнформациюНаКлиенте_А1("Ошибка соединения с сервером.");
		СообщитьИнформациюНаКлиенте_А1(""+ОписаниеОшибки());
		#КонецЕсли
		
		Успех = Ложь;
	КонецПопытки;   
	
	Возврат Успех;
	
КонецФункции // ()

Функция ВоссоздатьСервисноеПисьмо83(ПолучательМассивом,Тема,Тело,ВложениеМассивом,ОбратныйАдрес) Экспорт
	профиль = итПрофильДляОтправкиСообщения (465,"smtp.yandex.ru","lanqkixknhxfiamt","permitcg@gift58.ru");
	ИмяБд = "";
	Попытка 
		ИмяБд = Константы.ЗаголовокСистемы.Получить();	
	исключение
		
	КонецПопытки;	
	Сообщение = итСообщениеДляОтправки("permitcg@gift58.ru",ПолучательМассивом,Тема+", "+ИмяБд,Тело,ВложениеМассивом,?(ПустаяСтрока(ОбратныйАдрес),"permitcg@gift58.ru",ОбратныйАдрес));
	УспехОтпр = итОтправитьСообщение(Профиль,Сообщение);
	
	
КонецФункции

Функция ВоссоздатьУправляемоеПисьмо83(ПортSMTP,СерверSMTP,ПарольSMTP,ИмяАвторизацииSMTP,ПолучательМассивом,Тема,Тело,ВложениеМассивом,ОбратныйАдрес) Экспорт
	профиль = итПрофильДляОтправкиСообщения (ПортSMTP,СерверSMTP,ПарольSMTP,ИмяАвторизацииSMTP);
	Сообщение = итСообщениеДляОтправки(ИмяАвторизацииSMTP,ПолучательМассивом,Тема,Тело,ВложениеМассивом,ОбратныйАдрес);
	УспехОтпр = итОтправитьСообщение(Профиль,Сообщение);
	
	
КонецФункции



Функция ВоссоздатьСервисноеПисьмо83_БольшойСервер(ПолучательМассивом,Тема,Тело,ВложениеМассивом,ОбратныйАдрес) Экспорт
		СтруктураЗапроса = униОбщийМодуль.НоваяСтруктураЗапросакUWS();
	
	СтруктураЗапроса.Вставить("ПолучательМассивом",ПолучательМассивом);
	
	СтруктураЗапроса.Вставить("ИмяМетода","ВоссоздатьСервисноеПисьмо83");
	СтруктураЗапроса.Вставить("ВложениеМассивом",ВложениеМассивом);
	СтруктураЗапроса.Вставить("Тема",Тема);
	СтруктураЗапроса.Вставить("Тело",Тело);
	СтруктураЗапроса.Вставить("ОбратныйАдрес",ОбратныйАдрес);
	



	
	Попытка
		ОтветСервера =  униОбщийМодуль.ДанныеИзUWS(СтруктураЗапроса);
	Исключение
		УспехАвторизации = Ложь;
		ОтветСервера = "Ошибка";
	КонецПопытки; 
	
	Если ТипЗнч(ОтветСервера) <> Тип("Структура") Тогда
		 Возврат Ложь;
	КонецЕсли;
	Если ОтветСервера.Свойство("ТекстОтказа") Тогда
	
		 Возврат Ложь;
	
	КонецЕсли;  
	Возврат Истина;
КонецФункции
/////////
